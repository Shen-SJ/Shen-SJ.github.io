var tipuesearch = {"pages":[{"title":"About","text":"沈孝錚 Shen, Shiau-Jeng 學歷 國立臺灣大學化學工程研究所 國立臺灣科技大學化學工程系 臺北市立松山工農化工科 興趣愛好 樂器演奏 音樂欣賞 閱讀專業書籍 逛街 寫code... 關於我啊... 我是一個碩士畢業的社會小白，本科是化學工程，不過因為之前的研究領域是使用 AspenPlus® 軟體做製程模擬的，剛好自身對於程式有些興趣， 因此有自學 python 這個程式語言，並且拿它來寫跟剛剛那個軟體做一些結合以及比較進階的應用，當然因為這語言的方便性，也去嘗試了像網路 爬蟲、AI領域方面，甚至是現在這個寫部落格也是@@ 該部落格是使用 Pelican 這個用 Python 編寫的靜態網頁生成器，想說是用這語言寫的比 較熟，或許會比較知道生成的機制吧~ 雖然學了一些程式，本人對自己的化工本業可是非常喜歡的呢，不然也不會從高中就開始念化工到研究所了 哈哈哈，希望之後可以在這領域好好 走下去，並且學習更多新的事物與精進電腦程式方面的技能。","tags":"pages","url":"https://shen-sj.github.io/pages/about/","loc":"https://shen-sj.github.io/pages/about/"},{"title":"用 Python 將 AspenPlus 連接起來！！","text":"前言 最近被人家問要怎麼用 Python 把 AspenPlus 連接起來，突然想到其實我這部落格的創立就是想說寫一些 AspenPlus/Dynamics 與 Python/Fortran 連接相關的說明書這樣，不然重新去看英文的說明書其實頗累的，我英文也不好...那今天就是先來介紹怎麼用 Python 將 AspenPlus 給連接起來吧~ 目錄 安裝相關程式與 packages 用 Python 連接 AspenPlus 檔案 在 AspenPlus 中找指定變數的路徑 結語 參考資料 安裝相關程式與 packages 首先就是要先把你的 Python 與 AspenPlus 安裝起來，這我就不說了，網路上應該有很多相關的，就挑一個自己看得懂的來做即可。 如果上面的都OK了，接下來就是要安裝讓 Python 可以與各種電腦應用程式進行互動的套件——pypiwin32——，使用你的 pip 來安裝： pip install pypiwin32 安裝好了後可以在你的 python 裡面 import 看看有沒有錯誤： import win32com.client as win32 如果沒有什麼輸出與錯誤表示安裝成功~ 用 Python 連接 AspenPlus 檔案 首先就是先匯入這個模組包，然後使用模組包的 Dispatch() 函式，傳入 'Apwn.Document' 值告訴 Python 你要開啟 AspenPlus 程式，如果你的電腦裡面有多種版本的 AspenPlus, 那可以傳 'Apwn.Document.{version_code}' 指定你的 AspenPlus 版本， code 與 version_code 如下： import win32com.client as win32 aspen = win32 . Dispatch ( 'Apwn.Document' ) # 使用你電腦預設 AspenPlus 版本開啟 aspen2 = win32 . Dispatch ( 'Apwn.Document.36.0' ) # 使用 AspenPlus V10.0 開啟 ↓ AspenPlus 版本與版本號的對應 版本 版本號 V8.8 34.0 V9 35.0 V10 36.0 V11 37.0 在這邊你取的變數名稱可以說就是代表你的 AspenPlus 程式了，之後對 AspenPlus 程式的操作都要用這個變數來進行，在這裡我 取名叫做 aspen 。接下來操控 AspenPlus 的語法都是在 UserGuide 上 Using the Aspen Plus ActiveX Automation Server 面找得到的了~通常呼叫了 AspenPlus 軟體後就是要開啟指定檔案，UserGuide 上說 InitFromArchive2(filename as String,...) 函式傳入檔案的絕對路徑就可以開啟檔案了，就像下面的 code 這樣： aspen . InitFromArchive2 ( \"C: \\\\ Simulation 1.apw\" ) # 開啟 C:\\Simulation 1.apw 的檔案 可以開始用 Python 操控你的檔案了！！ 在 AspenPlus 中找指定變數的路徑 檔案開啟是開啟了，但如果你要把一些值抓出來或是用 Python 輸入進去，例如抓取/設定某蒸餾塔的塔板數還是不知道怎麼辦啊， 這時候我們就必須知道那個值在 AspenPlus 程式裡的甚麼地方並且呼叫他，我們可以用 AspenPlus 裡面的 Variable Explorer 找尋， 他在 AspenPlus Simulation 介面中的 Costomize 裡面： 點開來裡面就是一個階層式的資料索引，所有在 AspenPlus 檔案裡面的資料都在這裡面了！我們可以在裡面找到想要的變數路徑~ 不過其實這樣慢慢找蠻累的，有些看著索引名稱還好找，但有些真的是...，還好還是有方便的功能可以幫你快速找尋路徑！首先到你想要找的 那個變數，這邊就以名為 B1 的蒸餾塔塔頂壓力為例子好了，在壓力那個數字給他複製起來： 再來就到你的 Variable Explorer 那邊，於階層瀏覽空白那邊隨便地方點右鍵並按下 Go to Node ： 你會發現搜尋輸入框裡面已經有東西在裡面了！但那還不是你的路徑，就先按下 OK 讓他去找： 哇~他除了幫你找到結果還幫你打開了階層清單呢~真是不錯~在右邊表格那邊的資訊欄中就可以得知關於 B1 塔的塔頂壓力這物件的程式相關資訊， 其中的 Path to Node 與 Call 這兩個路徑都可以在程式裡面呼叫，再來就是用這個路徑呼叫其他關於這物件的屬性了，這裡要注意， 路徑裡面的開頭 Application 就是我們前面建立的 aspen 變數。 假設現在你要得到這塔頂壓力的值是多少，從表格來看， Value 屬性應該就是你的壓力值，程式就可以這樣寫： b1_p = aspen . Tree . Data . Blocks . B1 . Input . PRES1 . Value b1_p2 = aspen . Tree . FindNode ( \"\\Data\\Blocks\\B1\\Input\\PRES1\" ) . Value # 跟上面那行的作用是一樣的 前面的路徑只是把 Application 改成我們取名的 aspen 而已，基本上一樣，再來就是 .Value 來得到我們的值這樣，另外要設定這個值 也是非常簡單，就跟平常妳寫程式用 = 來做就好： aspen . Tree . Data . Blocks . B1 . Input . PRES1 . Value = 2 aspen . Tree . FindNode ( \"\\Data\\Blocks\\B1\\Input\\PRES1\" ) . Value = 2 # 跟上面那行的作用是一樣的 現在我把壓力設為 2 bar 了~ 結語 以上就是一個非常簡單得如何用 Python 連接 AspenPlus 的方式，裡面其實還有很多功能與坑沒說到，功能的話大部分 UserGuiude 都會介紹到， 可以去參考參考，真的覺得 UserGuide 算是蠻重要的，可以好好的看看，那坑的話像是你要取用的屬性如 Physical Quantity 這種名子裡面有空格 該怎麼辦，這有機會就再介紹了QQ 參考資料 Running Aspen via Python Aspen Plus User Guide","tags":"blogging","url":"https://shen-sj.github.io/articles/2020/07/26/yong-python-jiang-aspenplus-lian-jie-qi-lai/","loc":"https://shen-sj.github.io/articles/2020/07/26/yong-python-jiang-aspenplus-lian-jie-qi-lai/"},{"title":"Fiddler 無法抓取封包之 port 占用...","text":"事發經過 最近在寫網路爬蟲有用到 Fiddler 抓包軟體幫我看看用自己寫的程式送出與接收到的封包內容與直接用瀏覽器做這些動作有什麼不一樣， 進而去做一些程式碼的修改，一開始這個 Fiddler 抓包都用得好好的，但突然有一天一樣用 Fiddler 抓取我運行的爬蟲程式封包時候居然出現： Traceback (most recent call last): File \"main.py\", line 426, in <module> File \"main.py\", line 363, in scrapping File \"main.py\", line 125, in login File \"site-packages\\requests\\sessions.py\", line 546, in get File \"site-packages\\requests\\sessions.py\", line 533, in request File \"site-packages\\requests\\sessions.py\", line 646, in send File \"site-packages\\requests\\adapters.py\", line 510, in send requests.exceptions.ProxyError: HTTPSConnectionPool(host='my.ntu.edu.tw', port=443): Max retries exceeded with url: /stuLeaveManagement/login.aspx?firstpage=teacher (Caused by ProxyError('Cannot connect to proxy.', OSError('Tunnel connection failed: 405 Method Not Allowed'))) 平常不是都用得好好的嗎？怎麼突然就這樣了@@ 而且不只程式出現問題，我連瀏覽器都沒辦法上網了!由上面的情況與爆出的錯誤來看， 感覺起來應該不是程式碼上的問題了(我也記得我沒改甚麼東西...)。雖然上面的錯誤訊息沒有看得很懂，但是我覺得可能是 port 的問題， Fiddler 會用到 port:8888(如下圖)， 調查過程 可能是不知道被誰佔用了吧~當然要直接改 Fiddler 的 port 應該是可以的，但還是想要知道是甚麼程式在佔用，萬一是駭客怎麼辦@@ 因此就趕快上網查了一下 windows 查詢系統 port 的指令...，原來是 netstat -ano 啊~還順便查詢了參數的意義， 由於太多參數了，我就列出這次會用到的三個就好，如果想要知道其他的參數意義，就在自己的 windows 電腦輸入 netstat /? 吧~ NETSTAT [ option ] - a 顯示所有連線和接聽連接埠 。 - n 以數字格式顯示位址和連接埠號碼 。 - o 顯示與每個連線相關聯的擁有處理程序識別碼 。 喔...既然知道的指令與參數意義就來查詢看看吧! C : \\ Users \\ SSJ > netstat - ano 使用中連線 協定 本機位址 外部位址 狀態 PID TCP 0 . 0 . 0 . 0 : 111 0 . 0 . 0 . 0 : 0 LISTENING 4280 TCP 0 . 0 . 0 . 0 : 135 0 . 0 . 0 . 0 : 0 LISTENING 764 TCP 0 . 0 . 0 . 0 : 443 0 . 0 . 0 . 0 : 0 LISTENING 4156 ... ... ... ... 痾...好像有點多啊，要我一個一個去找 port:8888 也太累了吧...還好還有一個指令可以幫我們做這件事情，那就是 find ： FIND <你想要搜尋的字串> <檔名:對哪個檔案進行搜尋> 但我們沒有要對甚麼檔案進行搜尋啊，難道還要把 netstat -ano 的結果先輸出成檔案在搜尋嗎？哪有這麼白癡的設計，在這情況我們可以利用「|」 (pipe)符號來達成我們的目的，整個指令就變成了 netstat -ano | find \"8888\" ，雖然運作原理不是很懂，但我想他運作機制簡單來說 應該就是將「|」左側 netstat -ano 所輸出的結果丟到「|」右側指令的輸入去，畫成簡圖應該是這樣： 所以這串指令就可以幫我們找到誰在佔用 port:8888 囉~ C:\\Users\\SSJ>netstat -ano | find \"8888\" TCP 127.0.0.1:8888 0.0.0.0:0 LISTENING 27140 TCP [::1]:8888 [::]:0 LISTENING 27140 UDP 0.0.0.0:28888 *:* 4156 喔...看起來有點複查啊，不過好像是看第一行結果（為什麼是看那行，原因有點複雜...反正就先查查看也不錯ˊˇˋ），得知是 PID=27140 這程式佔用了，那就到工作管理員>>處理程序來看看誰是 PID=27140，如果你的工作管理員>>處理程序沒有顯示 PID 的話，就在任一個欄位名稱點右鍵 ，把 PID 打勾就好了： 找到你了!! 喔喔就是你！終於抓到了~看起來是個 python 的執行檔案，目前我好像沒有在跑什麼東西所以關掉應該沒差吧~果然關掉後我的程式重跑就沒問題了， 瀏覽器也可以正常的上網了~~~~","tags":"blogging","url":"https://shen-sj.github.io/articles/2020/06/05/fiddler-wu-fa-zhua-qu-feng-bao-zhi-port-zhan-yong/","loc":"https://shen-sj.github.io/articles/2020/06/05/fiddler-wu-fa-zhua-qu-feng-bao-zhi-port-zhan-yong/"},{"title":"用SoftEther架設自己的VPN","text":"一些可憐的~~菸酒生~~在家也想要查查文獻、看看paper，但學校又沒有提供VPN的話，那可是一件非常痛苦的事情啊...，難道只能去實驗室用電腦了嗎?! 有一個方法就是使用遠端桌面連回實驗室電腦，通常這可以利用一些軟體(如:Teamviewer, Anydesk...)或是你電腦的windows系統是專業版、 教育版、...等等(~~反正不是家用版就對了~~)就能夠辦到，不過我又覺得我只是想要使用學校的這個IP來查詢資料，直接連回電腦會不會太大費周章了@@? 所以我就想使用另外一個方法，在學校電腦自己架一個VPN Server，不過架設的過程是稍嫌複雜，本人也是研究了好幾天才大概能用... 好不容易成功了就記錄一下整個流程吧~不然我怕之後還會用到的話我卻忘了QQ 以下的步驟都是參考以下幾篇文章所得到的心得，我把網址附在最下面，有需要的同學可以去參考參考，基本上步驟都跟他們一樣啦 :)) 那就開始吧!!! 使用軟體與作業系統 SoftEtherVPN Windows10 企業版 ((家用版應該也是可以吧... 架設VPN Server 首先我是去官方網站下載該軟體，進到官網就是找到 Download>>Download SoftEtherVPN 並進入 選擇適合你的選項，像我是windows系統，系統就選windows，然後就會看到下面出現很多連結，最上面的應該是最新版本，應該也是可以用啦， 不過我是選擇稍微就一點的版本就是，~~總是有傳言最新的比較不穩定~~，我是用Ver4.31給大家參考參考 選了想要的版本後他應該就會開始下載了，等下載完就點兩下開始安裝，就下一步~ 因為我們就是要建立一個VPN Server，所以選SoftEther VPN Server後就下一步~ 後面就是一些許可與軟體訊息什麼的，看過後沒問題就可以下一步了~ 指定好你軟體要安裝在那裡就繼續((我是使用預設而已 開始安裝!! 咕嚕咕嚕咕嚕...... 耶~~~ 安裝好了~~~ 安裝好了如果直接按完成，他應該會幫你開啟 SoftEther VPN Server 管理工具，這時你可以看到他已經預先幫你建立了一個連線設置， 我們就直接點那個設置兩下進行一些設定吧~ 因為我們是第一次進去這設置，所以他會叫你建立管理者密碼，之後如果身為管理者的你要進去這設置管理一些設定的話會需要用到這密碼~ 密碼設定好了之後應該會跳出這東西，好像可以幫你簡單的安裝一些設定啦，但我是直接關閉等等自己設定這樣 關閉後他就會問你要不要設置IPsec，那我們就確定，因為等等連線會用到這東西~ 關於這東西的設置我是勾選第一個框框\"啟動L2TP服務器功能(L2TP over IPsec)\"，再來最下面那個密碼必須要設定並好好保存， 之後要連到你這VPN會需要的~ 到了這畫面表示快好了!!我們還有一個設定需要設定才能連上，首先先點\"管理虛擬HUB\" 再來進入\"虛擬NAT和虛擬DHCP服務器\"裡面 點選\"啟用SecureNAT\"就可以囉~\"SecureNAT配置\"我是使用預設的，如果有懂得朋友也可以進去裡面客製一下~好了就可以關閉本畫面回到管理HUB畫面了 別人要使用你這台VPN需要透過帳號跟密碼，身為管理者的你就需要替他們建立帳號跟密碼囉，這樣除了比較安全外也可以限制有誰可以使用你的VPN， 因此我們點選\"管理用戶\"來新增用戶 你可以看到這裡什麼用戶都沒有，所以還沒有人可以使用你的VPN，我們點選\"新建\" 在這邊你就可以輸入新用戶的帳號跟密碼，至少我圖中兩個紅色框框部分需要設定，其他部分例如限制使用時段、 驗證類型等等如果你會且有需要的話也可以去做設定~ 終於可以使用了!!可以請人家用用看囉~~ 在windows中使用VPN 首先必須到你windows電腦裡的 設定>>網路和網際網路>>VPN，來新建一個VPN連線 然後就輸入所需要的資訊，像是: * 連線名稱: 自己知道這VPN是甚麼就好，跟你的server沒關係~ * 伺服器名稱或位址: 就是你架的VPN Server的IP * VPN類型: L2TP/IPsec(使用預先共用金鑰) * 預先共用金鑰: 就是你在 這步驟 所設的密碼 * 使用者名稱: 管理者幫你建立的帳號 * 密碼: 管理者幫你設定的密碼 都輸入完就可以儲存囉~~再來你點選你工具列右下角的網路圖示，可以發現到多了你剛剛新增個VPN，當你想要使用這VPN查paper的時候就按連線 出現已連線就是成功了，恭喜你!!! 參考資料: https://zh.wikipedia.org/wiki/SoftEther_VPN https://noter.tw/4524/softether-vpn-%E6%9E%B6%E8%A8%AD%E8%A8%98%E9%8C%84/ https://jjnux.blogspot.com/2017/02/softether-vpn-server-windows.html https://it001.pixnet.net/blog/post/328610332-it%E5%B0%88%E9%A1%8C--%E5%AE%89%E8%A3%9Dsoftethervpn-%28l2tp-ipsec%29","tags":"blogging","url":"https://shen-sj.github.io/articles/2020/03/29/yong-softetherjia-she-zi-ji-de-vpn/","loc":"https://shen-sj.github.io/articles/2020/03/29/yong-softetherjia-she-zi-ji-de-vpn/"},{"title":"用Pelican搞部落格遇到的python import模組問題...","text":"最近一直在練習用Pelican寫部落格，不過之前我設定專案的時候好像沒設定好，publishconf.py裡面沒有把pelicanconfi.py裡的設定給匯入， 所以我就自己把 from pelicanconf import * 給加了進去，但每次當我要把目前的東西輸出成檔案在CMD下 pelican content -s publishconf.py 指令的時候`,就會出現這個錯誤... CRITICAL : ModuleNotFoundError : No module named 'pelicanconf' 疑?奇怪，pelicanconf.py 跟 publishconf.py 是在同一個資料夾，而且我不是有import了嗎?!怎麼他會找不到呢... 因此我就確認了一下publishconf.py在工作的時候的路徑是長怎樣，我就在我那檔案添加了這段程式碼: import sys print ( sys . path ) 然後就用CMD再給他run一次，結果... [ 'C: \\\\ Users \\\\ SSJ \\\\ Anaconda3 \\\\ envs \\\\ myblog \\\\ Scripts \\\\ pelican.exe' , 'c: \\\\ users \\\\ ssj \\\\ anaconda3 \\\\ envs \\\\ myblog \\\\ python37.zip' , ...... ] 怎麼沒有看到我的工作目錄哩...看來只好給他加上去了，但我發現其實Pelican有考慮到這點已經幫你加好了XDDD，只是我import的語句應該在目錄加 進去之後，這樣才不會有問題，因此程式碼就變成了: import os import sys sys . path . append ( os . curdir ) from pelicanconf import * 然後終於成功了@@ 可以繼續專心研究搞部落格了...","tags":"blogging","url":"https://shen-sj.github.io/articles/2020/03/28/yong-pelicangao-bu-luo-ge-yu-dao-de-python-importmo-zu-wen-ti/","loc":"https://shen-sj.github.io/articles/2020/03/28/yong-pelicangao-bu-luo-ge-yu-dao-de-python-importmo-zu-wen-ti/"},{"title":"圖片測試_外部連結","text":"這是一篇測試能不能顯示外部連結圖片的文章~","tags":"test","url":"https://shen-sj.github.io/articles/2020/03/02/tu-pian-ce-shi-_wai-bu-lian-jie/","loc":"https://shen-sj.github.io/articles/2020/03/02/tu-pian-ce-shi-_wai-bu-lian-jie/"},{"title":"show the picture","text":"","tags":"test","url":"https://shen-sj.github.io/articles/2020/03/01/show-the-picture/","loc":"https://shen-sj.github.io/articles/2020/03/01/show-the-picture/"},{"title":"Test for icon and underline title","text":"測試我的標題","tags":"Test","url":"https://shen-sj.github.io/articles/2020/03/01/test-for-icon-and-underline-title/","loc":"https://shen-sj.github.io/articles/2020/03/01/test-for-icon-and-underline-title/"},{"title":"Markdown Examples Part 1","text":"Basic markdown examples are shown below This text is bold This text is also bold ⋯ This text is italic This text is also italic This text is italic and bold An h1 heading An h2 heading An h3 heading... An h6 heading A list with numbers: 1. One 2. Two 3. Three A list with bullets: * Bullet * Bullet * Bullet Here's a blockquote: > Simple is better than complex Here's a table: Column1 Column 2 Column 3 Value 1 Value 2 Value 3 Value 4 Value 5 Value 6 Value 7 Value 8 Value 9 Here's a python script def login ( self ): # 先開啟起始網頁取得初始cookies取得權限 pre_web = self . rs . get ( self . pre_url , headers = self . nor_headers ) pre_cookies = requests . utils . dict_from_cookiejar ( self . rs . cookies ) # 登入學校系統 login_web = self . rs . post ( self . login_url , headers = self . nor_headers , data = self . login_data ) login_cookies = requests . utils . dict_from_cookiejar ( self . rs . cookies ) remove_cookie_by_name ( self . rs . cookies , 'PHPSESSID' ) # 不知道 cookie 多了不必要的PHPSESSID會不會怎樣，先刪除好了 # 檢查登入有沒有失敗 if login_web . url != self . search_url : raise LoginError ( '登入失敗!!!' ) return login_web","tags":"test","url":"https://shen-sj.github.io/articles/2019/01/02/markdown-examples-part-1/","loc":"https://shen-sj.github.io/articles/2019/01/02/markdown-examples-part-1/"}]};