<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SSJ's Blog</title><link href="https://shen-sj.github.io/" rel="alternate"></link><link href="https://shen-sj.github.io/feeds/all.atom.xml" rel="self"></link><id>https://shen-sj.github.io/</id><updated>2020-09-20T00:00:00+00:00</updated><entry><title>把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行</title><link href="https://shen-sj.github.io/articles/2020/09/20/ba-intel-fortran-gua-zai-aspenplus-5jian-li-chao-jian-dan-fortran-fan-ying-shi-bing-zhi-xing/" rel="alternate"></link><published>2020-09-20T00:00:00+00:00</published><updated>2020-09-20T00:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-09-20:/articles/2020/09/20/ba-intel-fortran-gua-zai-aspenplus-5jian-li-chao-jian-dan-fortran-fan-ying-shi-bing-zhi-xing/</id><summary type="html">&lt;p&gt;經過了這麼長的流程，我們的電腦終於準備好可以掛 Fortran 的檔案給 AspenPlus 跑了，那這篇會用 Fortran 寫一個超簡單的動力式、透過 AspenPlus 編譯、建立 AspenPlus 模擬檔案、掛到 AspenPlus 上並且成功執行！&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;經過了這麼長的流程，我們的電腦終於準備好可以掛 Fortran 的檔案給 AspenPlus 跑了，那這篇會用 Fortran 寫一個超簡單的動力式、
透過 AspenPlus 編譯、建立 AspenPlus 模擬檔案、掛到 AspenPlus 上並且成功執行！對於這個動力式我就稍微解說一下好了，整個反應式長這樣：   &lt;/p&gt;
&lt;div class="math"&gt;$$CO+\frac{1}{2} O_{2} \rightarrow CO_{2}$$&lt;/div&gt;
&lt;p&gt;這反應在現實中好不好反應、反應的條件都先不理它，只要 AspenPlus 檔案中看到它有照我們的方式反應就好，現在我們就一步一步一起做吧~&lt;br&gt;
如果需要看其他步驟，下面有目錄連結就點進去看吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  系列文章目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/"&gt;把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/"&gt;把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/"&gt;把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="{run_fortran.md"&gt;把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  建立 AspenPlus 模擬檔案&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;雖然我也可以直接把檔案給你們跑啦，但是 AspenPlus 版本眾多，我不一定可以滿足各種版本，所以我搞了一個非常非常簡單的例子就叫大家跟著
一起做可能還比較快。首先起手式就是打開對應版本的 AspenPlus，而且那個 &lt;strong&gt;&lt;em&gt;版本必須要前面我們已經設定好 Fortran 編譯器的版本&lt;/em&gt;&lt;/strong&gt; 喔！！因為之前我都是
用 V10 來做示範，因此這邊我就開 V10，你們之前用哪個版本做就開哪個版本：&lt;br&gt;
&lt;img alt="開啟Aspen+" src="https://drive.google.com/uc?export=view&amp;amp;id=1hEZjW_BZv6m-oyGEJ0T7HJK4a6lb1oUK"&gt;  &lt;/p&gt;
&lt;p&gt;之後就是建立一個檔案這樣，這步驟熟悉 AspenPlus 的應該都會，我只是把我的步驟 show 出來而已，不一定要照我這樣做：&lt;br&gt;
&lt;img alt="建立專案" src="https://drive.google.com/uc?export=view&amp;amp;id=176Vi-AgtanRBVrvfnNpKyXhPmv8Byt-P"&gt;  &lt;/p&gt;
&lt;p&gt;接下來把三個物質給輸入進去，分別為 &lt;span class="math"&gt;\(CO\)&lt;/span&gt; 、 &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt; 、 &lt;span class="math"&gt;\(CO_{2}\)&lt;/span&gt; ，請各位務必化合物 &lt;strong&gt;&lt;em&gt;順序&lt;/em&gt;&lt;/strong&gt; 要跟我圖上面的一樣，不然後面寫 code 的地方會
有問題，如果真要說原因的話，其實是這樣的，我們後面在寫 code 的時候，會需要取用或輸出對應物質的性質或反應速率，就以反應速率來說好了，在我們那個
code 裡面，物質的反應速率變數名稱為 &lt;strong&gt;&lt;em&gt;RATES(物質順序號)&lt;/em&gt;&lt;/strong&gt; ，這個物質順序號就跟我們這邊輸入物質的順序有關了，依照我們剛剛輸入的物質順序，現在
 1 號就是 &lt;span class="math"&gt;\(CO\)&lt;/span&gt;，2 號就是 &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt; ，3 號就是 &lt;span class="math"&gt;\(CO_{2}\)&lt;/span&gt;，所以 RATES(1) 就是 &lt;span class="math"&gt;\(CO\)&lt;/span&gt; 的反應速率， RATES(2) 就是 &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt; 的反應速率，
 RATES(3) 就是 &lt;span class="math"&gt;\(CO_{2}\)&lt;/span&gt; 的反應速率了~如果需要更仔細的解說，
就要去看 User Guide 了：&lt;br&gt;
&lt;img alt="輸入化合物" src="https://drive.google.com/uc?export=view&amp;amp;id=10-7n4zr4xWFzGAPWcD3gOu-dGeHhudQb"&gt;  &lt;/p&gt;
&lt;p&gt;熱力學模型就先隨便選吧，反正我們這個只是隨便弄的反應，也沒有要做分離，而且化合物都是氣體，這邊我就選 &lt;strong&gt;&lt;em&gt;PENG-ROB&lt;/em&gt;&lt;/strong&gt; ：&lt;br&gt;
&lt;img alt="選熱力學模型" src="https://drive.google.com/uc?export=view&amp;amp;id=1qFoGHZ06Rn25l4P6jWSIAcPD_LW3zizh"&gt;  &lt;/p&gt;
&lt;p&gt;接下來我們就先存檔吧，就自己找一個位置存，記得在哪裡就好，存好就先把這檔案關掉吧：&lt;br&gt;
&lt;img alt="存檔" src="https://drive.google.com/uc?export=view&amp;amp;id=1QYc9kJuPq59yWSkhBvfkhHdUsCHy_x6k"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  編寫動力式 Fortran 檔&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;接下來我們就先編寫動力式 Fortran 檔，但 AspenPlus 對於這個檔案的輸入輸出有制式的規定，沒看 User Guide 一定沒辦法寫的正確，
看著 User Guide 自己慢慢寫其實也不是很實際， AspenPlus 你們安裝 AspenPlus 應用程式的資料夾裡面有附贈各種 Fortran 檔的範例（如：動力式、
物性計算、質傳計算...等等），用那個改比較快且正確，那我們就先把這檔案取出來，這次我們是要撰寫動力式，使用 &lt;strong&gt;&lt;em&gt;usrkin.f&lt;/em&gt;&lt;/strong&gt; 檔，檔案位置在
&lt;code&gt;C:\Program Files (x86)\AspenTech\Aspen Plus V{對應版本號}\Engine\User&lt;/code&gt;，看你是甚麼版本的 AspenPlus 就去對應版本的路徑，
那如果你的 AspenPlus 是 V11.0 ，應用程式就是在 &lt;strong&gt;&lt;em&gt;Program Files&lt;/em&gt;&lt;/strong&gt; 裡面（就是&lt;code&gt;C:\Program Files\AspenTech\Aspen Plus V11.0\Engine\User&lt;/code&gt;
裡面），找到檔案就把該檔案複製到你剛剛存 AspenPlus 模擬檔案的工作目錄底下，記得你的 &lt;strong&gt;&lt;em&gt;Fortran 檔案要跟 AspenPlus 模擬檔案在同個目錄&lt;/em&gt;&lt;/strong&gt; 喔~:&lt;br&gt;
&lt;img alt="找範例檔並複製到工作目錄" src="https://drive.google.com/uc?export=view&amp;amp;id=1SpJgqFhWj2WzmAdEYIqIraRMuEYLNTmu"&gt;  &lt;/p&gt;
&lt;p&gt;然後打開 &lt;strong&gt;&lt;em&gt;usrkin.f&lt;/em&gt;&lt;/strong&gt; 這個檔案，因為之前我們已經安裝了 Visual Studio 了所以我們可以用這軟體打開該檔案，或是你爽要用記事本打開也可以，
打開後拉到最下面，新增三個反應速率式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;RATES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;RATES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;
&lt;span class="n"&gt;RATES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這段的意思呼應到上面有講到的化合物順序， RATES(1) 就是化合物1的反應速率，也就是 &lt;span class="math"&gt;\(CO\)&lt;/span&gt;，它的速率不管在什麼溫度跟物質濃度下是 -1，在 Aspen
的認知裡， RATES 的單位根據不同情況會有不同指定的單位，等等我會用 PFR 來模擬反應，因此這邊 RATES 的單位就是 kmole/(meter·sec)，這在
User Guide 都有寫，這邊就先講結果就好，所以 RATES(1) = -1.0 的意思就是我們的進料 &lt;span class="math"&gt;\(CO\)&lt;/span&gt; 經過 PFR 會每秒、每公尺減少 1.0 kmole、進料 &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt;
經過 PFR 會每秒、每公尺減少 0.5 kmole、出料 &lt;span class="math"&gt;\(CO_{2}\)&lt;/span&gt; 經過 PFR 會每秒、每公尺增加 1.0 kmole，當然我們所輸入的反應速率要元素平衡喔，不然在 Aspen
模擬中會有錯誤的~&lt;br&gt;
式子的解釋大概就是這樣，還不想知道為什麼的人就像下圖一樣照打上去就對了，打好後存檔關閉檔案：
&lt;img alt="輸入反應速率式" src="https://drive.google.com/uc?export=view&amp;amp;id=1Nyw230o2pLLhar8YuCz0bnr7McrFrb8I"&gt;  &lt;/p&gt;
&lt;p&gt;關閉後將檔名改成大寫（這就先不要管為什麼了，先能跑就好~）：&lt;br&gt;
&lt;img alt="大寫檔名" src="https://drive.google.com/uc?export=view&amp;amp;id=1fxqKgY6OhVpAdNz2CMRM8j7YIus3MQO3"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  編譯動力式 Fortran 檔&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;動力式檔案寫好了後就是要編譯檔案成 AspenPlus 可以讀到的檔案格式，編譯的步驟如下，首先我們先打開對應版本的 &lt;strong&gt;&lt;em&gt;Customize Aspen Plus&lt;/em&gt;&lt;/strong&gt; ，
因為我整個操作都是用 V10，因此我就是打開 Customize Aspen Plus V10：&lt;br&gt;
&lt;img alt="打開Customize Aspen Plus" src="https://drive.google.com/uc?export=view&amp;amp;id=1-MwB4sfSb7poEkZFsBpikLn2e8lUCJWj"&gt;  &lt;/p&gt;
&lt;p&gt;打開來會看到一個 CMD 的介面，然後它的工作目錄是在 AspenPlus 資料夾裡面，接下來使用&lt;code&gt;CD [你的工作路徑]&lt;/code&gt;指令將工作目錄切換到我們剛剛存放
Aspen 檔案跟 Fortran 檔的地方：&lt;br&gt;
&lt;img alt="切換工作目錄" src="https://drive.google.com/uc?export=view&amp;amp;id=1GOjLdIq0wr-mzhYH25xWRa5eWHS-pC_Q"&gt;  &lt;/p&gt;
&lt;p&gt;現在我們使用&lt;code&gt;aspcomp [fortran檔檔名]&lt;/code&gt;指令來編譯我們的 Fortran 檔，按下 Enter 後如果甚麼都沒發生表示編譯成功！並且在你的工作目錄下
會看到多出一個 &lt;strong&gt;&lt;em&gt;USRKIN.obj&lt;/em&gt;&lt;/strong&gt; 檔，這個檔案就是要給 Aspen檔吃進去的：&lt;br&gt;
&lt;img alt="編譯檔案" src="https://drive.google.com/uc?export=view&amp;amp;id=1K5WlOs5281HjedmjTozuPjxFYUm8OfI6"&gt;&lt;br&gt;
&lt;img alt="出現obj檔" src="https://drive.google.com/uc?export=view&amp;amp;id=1TzUsFCnl0iw8R7MgBtii1966aDMeui-G"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  在 Aspen 檔中執行 Fortran 動力式&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Fortran 的部分都結束了，接下來就是跑模擬了，首先就是打開我們剛剛的模擬檔案，新增一個動力式，它的類型是 &lt;strong&gt;&lt;em&gt;USER&lt;/em&gt;&lt;/strong&gt; ：&lt;br&gt;
&lt;img alt="新增USER動力式" src="https://drive.google.com/uc?export=view&amp;amp;id=1fd1dMunG3D9eh6mltA7-rbrI7zYwSb1v"&gt;  &lt;/p&gt;
&lt;p&gt;然後在 Subroutine 的標籤中，把 Name 旁邊的空格輸入我們剛剛編譯好的 OBJ 檔案檔名：&lt;br&gt;
&lt;img alt="輸入檔名" src="https://drive.google.com/uc?export=view&amp;amp;id=1gMC8oWLXXIHZeH-UmF2Fs4TLzEcagsz9"&gt;  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;這樣動力式就新增好了，之後就是新增一個 PFR 反應器，並且把該接的物流接一接，那怎麼新增反應器跟接物流就不是我們教學內容了，我覺得
會想要搞 Fortran 動力式應該對 AspenPlus 有一定的熟悉度了((吧：&lt;br&gt;
&lt;img alt="建立Flowsheet" src="https://drive.google.com/uc?export=view&amp;amp;id=1W_xmIXc0gUc0ntS8NCAaCLHwbnb-W5Z1"&gt;  &lt;/p&gt;
&lt;p&gt;PFR 的設定就是下面這樣：&lt;br&gt;
1. Adiabatic，因為選這個不用在設定期它參數比較方便 XDD&lt;br&gt;
&lt;img alt="adiabatic" src="https://drive.google.com/uc?export=view&amp;amp;id=1GRA8KXFtralFtZOXr0ip5Tp0xdUk04EZ"&gt;&lt;br&gt;
2. Length 跟 Diameter 都是 1 meter，根據上面反應速率的單位（kmole/meter/sec）的單位，就看看一公尺長的 PFR 是否會讓 &lt;span class="math"&gt;\(CO\)&lt;/span&gt; 減少 -1 kmol/s、
   &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt; 減少 -0.5 kmol/s 並產生 1 kmol/s 的 &lt;span class="math"&gt;\(CO_{2}\)&lt;/span&gt; 吧~ &lt;br&gt;
&lt;img alt="長度跟直徑" src="https://drive.google.com/uc?export=view&amp;amp;id=1Dy4mw26eUsZZLP6PoEUxOV8-tEGxpoMW"&gt;&lt;br&gt;
3. Reaction 選剛剛的 R-1&lt;br&gt;
&lt;img alt="反應" src="https://drive.google.com/uc?export=view&amp;amp;id=1-qybcfMZMbKJ7cYSoZa6AmcqWnntsa-j"&gt;&lt;br&gt;
進料物流的設定就簡單了：
1. 25 攝氏溫度
2. 1 bar
3. &lt;span class="math"&gt;\(CO\)&lt;/span&gt; 有 1 kmol/sec 、 &lt;span class="math"&gt;\(O_{2}\)&lt;/span&gt; 有 0.5 kmol/sec 的摩爾流率，記得這邊摩爾流率的單位一定要是 &lt;strong&gt;&lt;em&gt;kmol/sec&lt;/em&gt;&lt;/strong&gt; 啊！
&lt;img alt="物流輸入" src="https://drive.google.com/uc?export=view&amp;amp;id=1a28MQV161WewKOOr2BbLFoRtcnLcNhgu"&gt;  &lt;/p&gt;
&lt;p&gt;非常辛苦的把以上的步驟都做完了後，應該就會看到下圖的樣子，然後終於可以跑模擬了！&lt;br&gt;
&lt;img alt="開始跑模擬" src="https://drive.google.com/uc?export=view&amp;amp;id=1UrVbarA04DcheutlBnggK4ubCPVA0i-O"&gt;  &lt;/p&gt;
&lt;p&gt;呼~看來是有成功收連沒問題！來看看結果是不是符合預期，在 PFR 上面點右鍵，然後點擊 &lt;strong&gt;&lt;em&gt;Stream Results&lt;/em&gt;&lt;/strong&gt;：&lt;br&gt;
&lt;img alt="看結果" src="https://drive.google.com/uc?export=view&amp;amp;id=1qP_hIEvd2ZEjaA1V1YPJdjbCnCOhaJ7W"&gt;  &lt;/p&gt;
&lt;p&gt;拉到下面看 &lt;strong&gt;&lt;em&gt;Mole Flows&lt;/em&gt;&lt;/strong&gt; 並把單位都改成 &lt;strong&gt;&lt;em&gt;kmol/sec&lt;/em&gt;&lt;/strong&gt;，嗯~~~看來整個反應有符合我們的預期來進行呢~&lt;br&gt;
&lt;img alt="預期的結果" src="https://drive.google.com/uc?export=view&amp;amp;id=1E4mg1fens5aq36PpOmM231-CcRDEkPz8"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt; 結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;終於啊終於，我們走到了這步了，如果跟著所有的步驟得到剛剛那樣的結果的話，表示你的 Fortran 掛 AspenPlus 是完全沒有問題了~接下來
就可以依照自己的要求來撰寫所需要的動力式了，不過要注意的是，如果你有在使用各種不同版本的 AspenPlus 的話，每一種板本都要各別編譯一次喔，就是用
&lt;strong&gt;&lt;em&gt;Customize Aspen Plus&lt;/em&gt;&lt;/strong&gt; 各別編譯一次，這樣才比較不會有問題。
&amp;emsp;&amp;emsp;這次的教學真的有點長，感覺好像也不是寫得特別好，或許有機會再修改吧@@之後應該還會有一些補充的文章，尤其是那個 SetCompiler 列表的
部分，雖然說去 AspenTech 官方網站更新就好，不過也是可以自己撰寫那個檔案的，想說稍微介紹一下裡面的語法之類的，了解語法如果之後有甚麼問題，感覺對
處理問題上面會比較得心應手吧，我覺得啦...&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blogging"></category><category term="Intel"></category><category term="Fortran"></category><category term="AspenPlus"></category><category term="AspenTech"></category></entry><entry><title>把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表</title><link href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/" rel="alternate"></link><published>2020-09-04T00:00:00+00:00</published><updated>2020-09-04T00:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-09-04:/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/</id><summary type="html">&lt;p&gt;終於把該安裝的東西給安裝好了，不過我們的 AspenPlus 還不知道你安裝好了沒，需要透過&lt;strong&gt;Set Compiler&lt;/strong&gt;告訴 Aspen+...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;終於把該安裝的東西給安裝好了，不過我們的 AspenPlus 還不知道你安裝好了沒，需要透過&lt;strong&gt;Set Compiler&lt;/strong&gt;告訴 AspenPlus 我們安裝的
Intel Fortran 跟 Visual Studio 安裝在什麼地方，當 AspenPlus 用到的時候，它就會自己去那些路徑找尋相關的工具來執行命令，這個步驟應該比較多
人知道，但 AspenPlus 提供的設定列表的 Fortran/VS 版本是比較舊的，大概近幾年的版本都不在上面，因此可能就會有人覺得 AspenPlus 好像不支援最新
版本的 Fortran/VS，這真是誤會大了！ 其實不只可以使用最新版本的 Fortran/VS，而且還用的很順暢呢！不過新版 Fortran/VS 不在列表那怎麼設定啊？
解決辦法就是我們去新增這個列表就好，不過自己去設定雖然可行只是有點複雜，比較簡單個更新方式就是去 AspenTech Support Center 下載官方提供的列表
更新檔就好，在這篇文章裡我們就來介紹更新的步驟吧~列表自行更新的話也不是不時，但很複雜，之後我考慮當作 Appendix 來講好了。&lt;br&gt;
如果需要看其他步驟，下面有目錄連結就點進去看吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  系列文章目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/"&gt;把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/"&gt;把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/"&gt;把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="{run_fortran.md"&gt;把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  登入 AspenTech Support Center 下載更新列表&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先我們先在電腦打開 AspenTech 提供的設定 Fortran/VS 路徑的&lt;strong&gt;Set Compiler for VXX&lt;/strong&gt;應用程式（看你要設定的 AspenPlus
版本是甚麼，你的XX就是對應的數字），在這邊我就用 V10 來做示範：
&lt;img alt="找setcompiler" src="https://drive.google.com/uc?export=view&amp;amp;id=1RN5r-N0WofLRiur6D7zZfb_6vhfaRR5m"&gt;  &lt;/p&gt;
&lt;p&gt;在這應用程式裡面就可以看到 AspenPlus 提供的舊的Fortran/VS 的列表了，然後我這邊的列表最新只支援到 Fortran 2017 與 Visual Studio 2015，
一樣的畫面裡面，我們可以看到紅色圈圈位置顯示了這個列表是在&lt;code&gt;C:\Program Files (x86)\AspenTech\APrSystem V10.0\Engine\xeq&lt;/code&gt; 地方的
Compilers.cfg，現在我們就是要去 AspenTech Support Center 下載他們提供的更新列表（也就是 Compilers.cfg 檔案）：&lt;br&gt;
&lt;img alt="setcompiler畫面" src="https://drive.google.com/uc?export=view&amp;amp;id=1lN2yRpb7M4A3YUfg9RRePRTe65A5jlhs"&gt;  &lt;/p&gt;
&lt;p&gt;首先我們先到 &lt;a href="https://esupport.aspentech.com/s_login"&gt;AspenTech Support Center&lt;/a&gt; 這個網頁中，然後按下&lt;strong&gt;Login&lt;/strong&gt;登入：
&lt;img alt="準備登入AspenTechSupportCenter" src="https://drive.google.com/uc?export=view&amp;amp;id=14HTzJZBP1MnM3ZdEk537cXfnOqo0TApf"&gt;  &lt;/p&gt;
&lt;p&gt;在這邊需要你輸入你們自己的 AspenTech 帳號密碼，然後按下&lt;strong&gt;Submit&lt;/strong&gt;來登入：&lt;br&gt;
&lt;img alt="登入AspenTechSupportCenter" src="https://drive.google.com/uc?export=view&amp;amp;id=1UqZ9njdRuPrPwSHxYkJtskTc7J4dU06f"&gt;  &lt;/p&gt;
&lt;p&gt;這樣我們就進到 AspenTech 的網路了，我們可以在裡面找到由他們提供的你有買的軟體安裝檔，還有論壇可以在上面發問與看到人家的發問。現在我們要去找官方
提供的更新 Compilers.cfg 檔案，可以在登入的狀態下直接進到&lt;a href="https://esupport.aspentech.com/apex/S_SoftwareDeliveryDetail?id=a0e0B00000BbrKcQAJ"&gt;這個&lt;/a&gt;
連結裡面，或是在自己的 Search... 欄位找&lt;strong&gt;Fortran Compiler configurations supported by Aspen Plus&lt;/strong&gt;文章並點進去，拉到最下面找到 
Compilers.cfg 與 Compilers64.cfg 並下載下來：&lt;br&gt;
&lt;img alt="下載compilers.cfg檔案" src="https://drive.google.com/uc?export=view&amp;amp;id=1g6GqLmeelakV4hnqfLjRrFW7OI0qlWSz"&gt;  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;這邊稍微說一下為甚麼會有 Compilers.cfg 與 Compilers64.cfg 兩種檔案好了，像我這篇的例子， V10 版本的列表就是 Compilers.cfg
檔案，其實 V10以前（包含 V10）的 Fortran/VS 列表都是在 Compilers.cfg 檔案裡面，如果你是 V11，就是 Compilers64.cfg 檔案，打開 
Set Compiler for V11 就能看到這個檔案名稱了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;我們的列表檔案下載下來了，現在我們就把列表直接貼到在第一步驟看到的&lt;code&gt;C:\Program Files (x86)\AspenTech\APrSystem V10.0\Engine\xeq&lt;/code&gt;
，首先就先開啟檔案總管並到這個位置，可以看到 Compilers.cfg 就在裡面：&lt;br&gt;
&lt;img alt="開啟路徑" src="https://drive.google.com/uc?export=view&amp;amp;id=1M16kSZ_MrFvD7SOchNYSQhcguUrj4ONX"&gt;  &lt;/p&gt;
&lt;p&gt;接下來我會先把路徑裡面的 Compilers.cfg 改個名子，這邊我改成 Compilers_old.cfg，然後把剛剛下載下來的 Compilers.cfg 貼到這個路徑下面變成
這樣：&lt;br&gt;
&lt;img alt="改名複製粘貼" src="https://drive.google.com/uc?export=view&amp;amp;id=1-KapHOrdggrNyiQx-C-eQwM5NI9r5MvS"&gt;  &lt;/p&gt;
&lt;p&gt;然後我們就可以打開&lt;strong&gt;Set Compiler&lt;/strong&gt;應用程式了！應該就會看到這個畫面，恭喜恭喜你的 Fortran/VS 已經被 AspenPlus 給認到了！從我的圖片來看就是
最後一個編號51：&lt;br&gt;
&lt;img alt="aspen找到inf/vs" src="https://drive.google.com/uc?export=view&amp;amp;id=1LLApdW-AHKCIp3Tx8FeLMiYC0NSYeD2B"&gt;  &lt;/p&gt;
&lt;p&gt;雖然在上面了，不過還沒有設定，現在就把51這組設定進 AspenPlus 裡面去，首先就輸入51，然後按下 Enter，這個步驟其實就是它會把你的 Fortran/VS 
設置設定到 HKEY_CURRENT_USER\Software\AspenTech\APrSystem 相對應版本的機碼裡面，上面一段話聽不懂就算了XDD，後面有機會我再寫一篇文章討論：&lt;br&gt;
&lt;img alt="設定1" src="https://drive.google.com/uc?export=view&amp;amp;id=1ZQ3LWquxMqKI4BLvoY0w1lIlGUle4DlV"&gt;  &lt;/p&gt;
&lt;p&gt;接下來還要再按一次51，然後按 Enter，這步驟就是把你的 Fortran/VS 設置設定到 HKEY_LOCAL_MACHINE\SOFTWARE[\WOW6432Node]\AspenTech\APrSystem 
相對應版本的機碼裡面，而且其實要用系統管理員身分開啟 Set Compiler 才能夠成功設定，上面這段話聽不懂也就算了XDD，後面有機會我再寫一篇文章一起討論：&lt;br&gt;
&lt;img alt="設定2" src="https://drive.google.com/uc?export=view&amp;amp;id=1UvyQUvjpFvlNZYIt7MlIR6q7Icptjrv0"&gt;  &lt;/p&gt;
&lt;p&gt;最後如果出現下面這個畫面，恭喜表示你的 AspenPlus 也知道你安裝的 Fortran/VS 在哪裡了~之後用到指令來編譯你自己寫的 Fortran 檔的話它就會使用你
安裝的工具來編譯了：&lt;br&gt;
&lt;img alt="成功設定" src="https://drive.google.com/uc?export=view&amp;amp;id=1hY5iEOu-51xceyU41QDIml5NOQ54a4I3"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt; 結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;恭喜恭喜！！現在你的電腦應該就可以成功在 AspenPlus 跑 Fortran 了~~接下來的文章就是稍微講一下怎麼寫 Fortran 來擴充 AspenPlus 
的功能，尤其是動力式的部分，然後怎麼編譯、掛上去讓 AspenPlus 找到它並運行這樣，確認你的 AspenPlus 真的知道 Fortran 在哪裡的這樣~&lt;/p&gt;</content><category term="blogging"></category><category term="Intel"></category><category term="Fortran"></category><category term="AspenPlus"></category><category term="AspenTech"></category></entry><entry><title>把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran</title><link href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/" rel="alternate"></link><published>2020-09-02T00:00:00+00:00</published><updated>2020-09-02T00:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-09-02:/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/</id><summary type="html">&lt;p&gt;在你的 Intel Fortran 申請好了與 Visual Studio 也安裝好了後我們就可以來安裝 Intel Fortran Compiler 了...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在你的 Intel Fortran 申請好了與 Visual Studio 也安裝好了後我們就可以來下載並安裝 Intel Fortran Compiler 了！&lt;br&gt;
如果需要看其他步驟，下面有目錄連結就點進去看吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  系列文章目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/"&gt;把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/"&gt;把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/"&gt;把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="{run_fortran.md"&gt;把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  下載 Intel Fortran&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;安裝之前我們就先來下載安裝檔案，我們一樣先在瀏覽器搜尋&lt;strong&gt;Intel&lt;/strong&gt;或者直接點這的&lt;a href="https://www.intel.com.tw"&gt;連結&lt;/a&gt;過去，
然後就是先登入我們在第一步驟申請的 Intel 帳號密碼：&lt;br&gt;
&lt;img alt="登入Intel" src="https://drive.google.com/uc?export=view&amp;amp;id=12bry-2OiqxRIP8FNdsDNvWPjRw9xm4Gn"&gt;&lt;/p&gt;
&lt;p&gt;登入後就進入&lt;strong&gt;My Intel 儀錶板/My Intel Dashboard&lt;/strong&gt;：&lt;br&gt;
&lt;img alt="進入Dashboard" src="https://drive.google.com/uc?export=view&amp;amp;id=1_4nvDCKmUWbY8I3Q5fJTyhtxbRF2hYpA"&gt;&lt;/p&gt;
&lt;p&gt;接下來會進到你的個人帳號資訊畫面，往下拉找到&lt;strong&gt;My Content&lt;/strong&gt;地方並把它展開，可以看到你申請的 Intel Parallel Studio XE 在列表當中，還有你的
免費教育板 License 跟其有效期限，點擊&lt;strong&gt;Download Options&lt;/strong&gt;：&lt;br&gt;
&lt;img alt="點擊Download Options" src="https://drive.google.com/uc?export=view&amp;amp;id=1BUSYN20EbEHYAnQozKxhumZGSglv3aGi"&gt;&lt;/p&gt;
&lt;p&gt;我們會進到 Intel Parallel Studio XE 的下載產品列表，可以看到列表中的&lt;strong&gt;Intel Parallel Studio XE Composer Edition for Fortran and C++ Windows&lt;/strong&gt;
就是我們要下載的 Intel Fortran Compiler了，所以我們就點擊這產品右邊的&lt;strong&gt;Download&lt;/strong&gt;來下載：&lt;br&gt;
&lt;img alt="點擊IntelFortran" src="https://drive.google.com/uc?export=view&amp;amp;id=160Tx6DKsLrtAe1AL5R-qgGaPhZXgmG9s"&gt;&lt;/p&gt;
&lt;p&gt;在這邊可以選擇我們要下載的 Intel Fortran 版本年限，但只有近幾年的而已，不過既然新的版本可以用就用新的，功能比較多可能也比較沒有以前版本奇怪的
Bug，但我也怕太新的版本會有新 Bug ，所以這邊示範就下載第二新的&lt;strong&gt;2020 Update 1&lt;/strong&gt;版本（這邊看你下載列表有甚麼就從裡面選想要的版本就好，
一段時間後列表應該會跟現在長的不一樣）：&lt;br&gt;
&lt;img alt="選IntelFortran下載版本" src="https://drive.google.com/uc?export=view&amp;amp;id=1piRz2xg2wKusVQbdT6CqyCwZl7qoMbcE"&gt;&lt;/p&gt;
&lt;p&gt;選好版本後就可以下載了，可以看到下面有兩種下載選項，第一種&lt;strong&gt;Customizable Package&lt;/strong&gt;就是你只會下載一個很小的檔案，透過這檔案在安裝的時候只會
從網路上下載你指定幾個需要安裝的軟體就好，可以節省下載的時間（就算你從Intel Parallel Studio XE 選了 Fortran 下載，還是會有很多安裝選項可以
選擇，像是一些 Fortran 相關模組包等等...），第二種&lt;strong&gt;Full Package&lt;/strong&gt;就是會下載完整的安裝檔，下載時間比較久也比較大（不過在後面安裝步驟還是可以
選擇安裝的東西，只是你已經下載下來了，沒安裝浪費你下載檔案的時間而已），這邊就是看你要哪一種安裝檔而已，隨便選都可以，那這邊我就選 Full Package
好了，我時間很多XDD：&lt;br&gt;
&lt;img alt="下載IntelFortran安裝檔" src="https://drive.google.com/uc?export=view&amp;amp;id=1g-lynfam1T_m15wskw_6AVR4lbUvnd1v"&gt;&lt;/p&gt;
&lt;p&gt;下載完就是一個安裝檔案，應該沒甚麼爭議就是右鍵兩下來啟動安裝，然後會問你一些安裝過程中會用到的檔案要放在哪邊這樣，安裝完它會自己刪掉，
這邊我就預設路徑，按下&lt;strong&gt;Extract&lt;/strong&gt;繼續安裝：&lt;br&gt;
&lt;img alt="點擊安裝檔" src="https://drive.google.com/uc?export=view&amp;amp;id=1LaQpEAxSyUY2RD0atMFMWFHItNOAjgSW"&gt;
&lt;img alt="解壓縮安裝檔" src="https://drive.google.com/uc?export=view&amp;amp;id=1XGoTrmbp0cFQjnG7kTc40YblVwqgmWte"&gt;&lt;/p&gt;
&lt;p&gt;這邊就可以看到安裝的選項了，至少我們的 Fortran 有安裝到，其它就看你自己要不要就好，這裡我就選這些東西安裝，然後按&lt;strong&gt;Next&lt;/strong&gt;：&lt;br&gt;
&lt;img alt="勾選安裝選項" src="https://drive.google.com/uc?export=view&amp;amp;id=1VNUxjNVKPmpoiAUkFwvYjDiCHxwyUrwa"&gt;&lt;/p&gt;
&lt;p&gt;後面這邊就是一些這軟體的使用條款與注意事項，沒問題就按&lt;strong&gt;I consent to the collection of my information&lt;/strong&gt;與
&lt;strong&gt;Next&lt;/strong&gt;（沒選這個也沒辦法繼續安裝=.=）：&lt;br&gt;
&lt;img alt="軟體條款" src="https://drive.google.com/uc?export=view&amp;amp;id=1QOdNBM-T9V28MwS7TipP3fMR9rty8DNi"&gt;&lt;/p&gt;
&lt;p&gt;這邊這個問題是因為我電腦的 CPU 不是 Intel 的是 AMD 的，所以跳出這警告，但 AMD 的 CPU 還是可以用的別緊張，就放心按&lt;strong&gt;Next&lt;/strong&gt;就好XDD：&lt;br&gt;
&lt;img alt="非Intel CPU 的警告" src="https://drive.google.com/uc?export=view&amp;amp;id=1PWJSlOdUMaALP5X7Csu2WrszaS_SMKM0"&gt;&lt;/p&gt;
&lt;p&gt;然後就在&lt;strong&gt;Provide a series number&lt;/strong&gt;下面的框框輸入你的產品序號囉（序號在&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;第一篇&lt;/a&gt;文章收的
信當中，或是這篇你登入 Intel 帳號，進到 Dashboard 裡面的 My Content這邊），輸入好就按&lt;strong&gt;Install&lt;/strong&gt;繼續安裝：&lt;br&gt;
&lt;img alt="輸入序號" src="https://drive.google.com/uc?export=view&amp;amp;id=1fBQs0EuK9E1qfLn-FcTb5IneUoR22T1y"&gt;&lt;/p&gt;
&lt;p&gt;只能等它安裝好囉，這段時間有空就看看 paper 吧@@：&lt;br&gt;
&lt;img alt="等待安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1NxsNBADQK3ka2lFne9a93BoccWdKp_b_"&gt;&lt;/p&gt;
&lt;p&gt;看到這畫面就恭喜你安裝完成了，快要可以在 AspenPlus 上面用 Fortran 了！！&lt;br&gt;
&lt;img alt="安裝完成" src="https://drive.google.com/uc?export=view&amp;amp;id=1EjkuvIC8kG0luts85j6oonUCXmdNIPcQ"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt; 結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;到這邊，各種所需的軟體都已經安裝完畢了！（如果你的 AspenPlus 也安裝好的話）接下來的步驟我們只要讓 AspenPlus 找的到我們 Fortran
與 Visual Studio 的路徑就可以了~那就是使用 AspenPlus 所附贈的&lt;strong&gt;Set Compiler&lt;/strong&gt;應用程式來達成這個目的，但是因為預設的 Fortran/VS 列表版本
都是比較舊的，所以我們必須去更新它，這樣才能認到我們新版的 Fortran/VS，下一篇就會介紹怎麼更新這個列表~&lt;/p&gt;</content><category term="blogging"></category><category term="Intel"></category><category term="Fortran"></category><category term="AspenPlus"></category><category term="AspenTech"></category></entry><entry><title>把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio</title><link href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/" rel="alternate"></link><published>2020-09-01T00:00:00+00:00</published><updated>2020-09-01T00:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-09-01:/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/</id><summary type="html">&lt;p&gt;上一篇文章教了怎麼申請 Intel Fortran Compiler 免費教育版，再來就是要準備安裝了！不過在安裝 Fortran 前，我們先來安裝 Visual Studio...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;上一篇文章教了怎麼申請 Intel Fortran Compiler 免費教育版，再來就是要準備安裝了！不過在安裝 Fortran 前，我們先來安裝
Visual Studio，因為跑 Fortran 的時候會需要用到 Visual Studio 的 C++ 套件，另外就是安裝 Fortran 時，會幫你在 Visual Studio 新增
&lt;strong&gt;Fortran專案&lt;/strong&gt;，意思就是你可以用 Visual Studio 來寫 Fortran，編譯器路徑、Debug等等環境在你建立這 Fortran 專案後就會幫你設置好了，
對於想要純寫 Fortran 的人來說可是相當方便！那現在我們就來開始安裝 Visual Studio 吧~&lt;br&gt;
如果需要看其他步驟，下面有目錄連結就點進去看吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  系列文章目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/"&gt;把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/"&gt;把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/"&gt;把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="{run_fortran.md"&gt;把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  安裝 Visual Studio Community&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先一樣就是先在搜尋引擎找&lt;strong&gt;Visual Studio&lt;/strong&gt;，在我的畫面是第一個所以我就點第一個進去：
&lt;img alt="搜尋VisualStudio" src="https://drive.google.com/uc?export=view&amp;amp;id=1v_z--3tAjp900q-CxtQtSzLiJl00ymjn"&gt;  &lt;/p&gt;
&lt;p&gt;再來就是點&lt;strong&gt;下載Visual Studio&lt;/strong&gt;了，應該沒有甚麼爭議，然後可以看到三個版本，因為裡面只有 Community 版是免費，其他都是要錢的，所以就點擊
Community 2019(看你下載的年份是哪一年就下在那一年的 Community 版即可)，如果你有錢有其他版本的 License 那也是可以，不過在後面可能就要
稍微設定一下了，我們就後面再說吧：
&lt;img alt="下載VisualStudioCommunity" src="https://drive.google.com/uc?export=view&amp;amp;id=12j68QG8qtk_typqeyHT7KabbwOfq4UD4"&gt;  &lt;/p&gt;
&lt;p&gt;下載完成後就是點開應用程式進行安裝：&lt;br&gt;
&lt;img alt="點擊應用程式安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1jB-UB4lUHFiADUaXKWv0c1gFHN1R0ltc"&gt; &lt;/p&gt;
&lt;p&gt;後面就是按繼續，然後讓它自己準備安裝的東西這樣，但它還沒開始安裝喔，只是先&lt;strong&gt;準備安裝&lt;/strong&gt;而已：
&lt;img alt="繼續安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1Em0mnn02l7RSkTWRM6agaRHd7IsTqoDX"&gt; 
&lt;img alt="繼續安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1avuRj4edKuSwGLdn0fdnmRnInSgQtKr9"&gt; &lt;/p&gt;
&lt;p&gt;這邊就是勾選 C++ 套件相關的東西就可以了，勾選好了就可以點擊右下角的&lt;strong&gt;安裝&lt;/strong&gt;按紐：
&lt;img alt="繼續安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1yvCbO5YO_jROW4m1B7Zf-RI7_rVMVyni"&gt; &lt;/p&gt;
&lt;p&gt;接下來就是漫長的等待了，等到這畫面結束後就安裝好了！
&lt;img alt="繼續安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1eqdcMT7-9tandcR9COLJ1IA3QUWHuDgd"&gt; &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt; 結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Visual Studio Community 與 C++ 相關套件安裝好了之後我們就可以來安裝 Intel Fortran Compiler 了，下面的文章就會解講安裝
Fortran 編譯器的一些注意事項了~ &lt;/p&gt;</content><category term="blogging"></category><category term="Intel"></category><category term="Fortran"></category><category term="Visual Studio"></category><category term="AspenPlus"></category><category term="AspenTech"></category></entry><entry><title>把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號</title><link href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/" rel="alternate"></link><published>2020-08-31T00:00:00+00:00</published><updated>2020-08-31T00:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-08-31:/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/</id><summary type="html">&lt;p&gt;我們在跑 AspenPlus 模擬的時候，如果像是動力式非常複雜但內建的反應蒸餾塔只能支持 Power law，那就只能自己掛 Fortran 上...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;我們在跑 AspenPlus 模擬的時候，如果像是動力式非常複雜但內建的反應蒸餾塔只能支持 Power law，那就只能自己掛 Fortran 上 
AspenPlus 了，要將 Fortran 掛到 AspenPlus 上就會遇到兩個問題：&lt;br&gt;
第一，AspenPlus 只能使用 Intel Fortran Compiler，但那個又要錢啊，因此可能有些人會找網路上的"參考版"來用；第二，從 AspenPlus 上的
"Set Compiler"來看，好像都不支援最新的 Fortran 編譯器。&lt;br&gt;
其實上面那兩個問題都是可以解決的，我們學生與教育工作者，不只能用免費的 Intel Fortran，還可以用最新的 Fortran 編譯器！但需要一些繁瑣的
步驟就是，因此我在這邊把這步驟分享出來，希望大家可以一起來使用正版又最新的 Fortran 編譯器喔~~  &lt;br&gt;
&amp;emsp;&amp;emsp;因為這步驟有點多，所以我會分為幾個文章來撰寫，首先我們就申請 Intel Fortran Compiler 的免費教育使用板吧~&lt;br&gt;
如果需要看其他步驟，下面有目錄連結就點進去看吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  系列文章目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/08/31/ba-intel-fortran-gua-zai-aspenplus-1shen-qing-intel-jiao-yu-mian-fei-zhang-hao/"&gt;把 Intel Fortran 掛在 AspenPlus （1）申請 Intel 教育免費帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/01/ba-intel-fortran-gua-zai-aspenplus-2an-zhuang-visual-studio/"&gt;把 Intel Fortran 掛在 AspenPlus （2）安裝 Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/02/ba-intel-fortran-gua-zai-aspenplus-3an-zhuang-intel-fortran/"&gt;把 Intel Fortran 掛在 AspenPlus （3）安裝 Intel Fortran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shen-sj.github.io/articles/2020/09/04/ba-intel-fortran-gua-zai-aspenplus-4geng-xin-setcompiler-lie-biao/"&gt;把 Intel Fortran 掛在 AspenPlus （4）更新 SetCompiler 列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="{run_fortran.md"&gt;把 Intel Fortran 掛在 AspenPlus （5）建立超簡單 Fortran 反應式並執行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  申請 Intel Parallel Studio XE 教育版&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Intel Fortran Compiler 目前是包在 Intel Parallel Studio XE 這個產品包裡面，只要申請這這整個包的教育使用認證就可以
使用 Intel Fortran 了，首先我們就先在搜尋引擎尋找這個產品包：&lt;br&gt;
&lt;img alt="搜尋IntelParallelStudioXE" src="https://drive.google.com/uc?export=view&amp;amp;id=1hypACp9Ly_boio5AKk6vsEpiO0tcc05Q"&gt;  &lt;/p&gt;
&lt;p&gt;在我的搜尋畫面是第一個啦，所以就點第一個超連結進去，然後就會看到 Intel 的歡迎畫面，之後理所當然的點下"Download"：
&lt;img alt="按下Dowload" src="https://drive.google.com/uc?export=view&amp;amp;id=18SG3YrtISP75ELq7Nvq2e7VPuyraUzGC"&gt;  &lt;/p&gt;
&lt;p&gt;就會出現產品的封面，還有問你要不要買他們的產品，這時候不要緊張，畫面有一個"Pricing for Academic Research"的連結，就給他按下去：&lt;br&gt;
&lt;img alt="按下Pricing for Academic Research" src="https://drive.google.com/uc?export=view&amp;amp;id=1CKZohobdkbkJNn8gk-h_4zTXOX8r69Fi"&gt;  &lt;/p&gt;
&lt;p&gt;他上面有說 Intel 軟體開發工具有誰可以免費使用，就選自己的身分點下去就好了，這邊我就以"學生身分"來做示範，所以我就點了"Student"：
&lt;img alt="註冊學生認證" src="https://drive.google.com/uc?export=view&amp;amp;id=1p6cGofXB2p28kP2ZPkEUbcjUsVDi4zNR"&gt;  &lt;/p&gt;
&lt;p&gt;在這個畫面就看你的作業系統是什麼就申請哪種的軟體囉，通常跑 AspenPlus 應該都是用 Windows 作業系統啦，所以這邊我就按下 "Windows"：
&lt;img alt="下載Windows軟體" src="https://drive.google.com/uc?export=view&amp;amp;id=15FvyOdJ31rDa5fmVoWoIWKqxPiuLd_0Q"&gt;  &lt;/p&gt;
&lt;p&gt;這頁面就是跟你說一些使用的注意事項，如果確認沒問題就打勾了（沒勾也是不能申請啊=.=），然後就按下 Accept：
&lt;img alt="下載Windows軟體" src="https://drive.google.com/uc?export=view&amp;amp;id=13M9pZgvBi0pF3JSAwhNNbZ10vcPdFHbG"&gt;  &lt;/p&gt;
&lt;p&gt;然後就輸入你的個人資料還有信箱，記得這個信箱是要用你機構的信箱喔，它會用信箱來確認你的身分的，如果是學生/老師當然就是使用後面有&lt;code&gt;@xxx.edu.tw&lt;/code&gt;
或是國家認證的教育信箱了，輸入完並勾選下面確認你18歲的框框後就按&lt;strong&gt;Submit&lt;/strong&gt;：
&lt;img alt="下載Windows軟體" src="https://drive.google.com/uc?export=view&amp;amp;id=1QAOTHx0Th6Ayv0-0qIiGkyBcihF9wxJH"&gt;  &lt;/p&gt;
&lt;p&gt;接下來 Intel 會要你創一個帳號用來管理你的憑證的，我們就可以登入帳號看到憑證的有效期限以及可以使用的產品並下載，這邊一樣把你想要創的帳號密碼、
個人資料與該勾選的勾一勾後，就按下下面的&lt;strong&gt;Create an Account&lt;/strong&gt;：
&lt;img alt="創Intel帳號" src="https://drive.google.com/uc?export=view&amp;amp;id=1ZZnGE9eshjgB-5oUP8c-67cIXXuz7OHp"&gt;&lt;br&gt;
&lt;img alt="確認送出Intel帳號" src="https://drive.google.com/uc?export=view&amp;amp;id=1fyYwj7uIzrwFQgkGmYwxQLuO1XoTBe5p"&gt;  &lt;/p&gt;
&lt;p&gt;上述的步驟都完成了後，就可以到剛剛我們申請憑證的信箱收信了，如果沒收到可能是 Intel 那邊還在審核吧，就等一段時間好了，我們應該會看到兩封信，
其中一封就是你的 Intel Parallel Studio XE 教育版（Intel Fortran Compiler 就在裡面）憑證，在下圖的紅色圈圈裡的馬賽克這序號要自己收
好不要讓別人看到，如果找不到這封信還可以登入你剛剛申請的 Intel 帳號看就是：
&lt;img alt="取得序號" src="https://drive.google.com/uc?export=view&amp;amp;id=1jLqKAhNiixEHounQfKxNETWzfOedy7fo"&gt;  &lt;/p&gt;
&lt;p&gt;第二封信就是你剛剛申請 Intel 帳號的認證信件，點擊下圖圓形圈圈裏面的&lt;strong&gt;link&lt;/strong&gt;進行帳號的認證即可~：
&lt;img alt="認證帳號" src="https://drive.google.com/uc?export=view&amp;amp;id=1kW049Sh6CicK_tcZDeosxaW6vSTFh3Ac"&gt;  &lt;/p&gt;
&lt;p&gt;如果你看到下圖的樣子，表示你的 Intel Fortran 免費教育板就申請成功了！！距離使用 Fortran 在 AspenPlus 上已經距離一大步了哈哈哈：
&lt;img alt="成功認證帳號" src="https://drive.google.com/uc?export=view&amp;amp;id=1fN51rBfv2jGCD9IJYmH9nqA3aZr-5pcS"&gt;  &lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt; 結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;這步驟就是先申請 Intel Fortran Compiler 的免費教育板，不過在下載安裝這個之前，我們先把 Visual Studio 給安裝好，下篇文章
就會介紹怎麼安裝以及講解安裝的注意事項了~&lt;br&gt;
&amp;emsp;&amp;emsp;其實本來我想要寫這部落格就是想要來介紹不用錢的 Intel Fortran 怎麼申請還有怎麼把它掛到 AspenPlus 上面，拖到現在才開始寫呢@@
希望我可以很有毅力的繼續把其他文章給寫完...&lt;/p&gt;</content><category term="blogging"></category><category term="Intel"></category><category term="Fortran"></category><category term="AspenPlus"></category><category term="AspenTech"></category></entry><entry><title>用 Python 將 AspenPlus 連接起來！！</title><link href="https://shen-sj.github.io/articles/2020/07/26/yong-python-jiang-aspenplus-lian-jie-qi-lai/" rel="alternate"></link><published>2020-07-26T13:00:00+00:00</published><updated>2020-07-26T13:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-07-26:/articles/2020/07/26/yong-python-jiang-aspenplus-lian-jie-qi-lai/</id><summary type="html">&lt;p&gt;最近被人家問要怎麼用 Python 把 AspenPlus 連接起來，突然想到其實我這部落格的創立就是想說寫一些 AspenPlus/Dynamics ...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  前言&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;最近被人家問要怎麼用 Python 把 AspenPlus 連接起來，突然想到其實我這部落格的創立就是想說寫一些 AspenPlus/Dynamics 與
Python/Fortran 連接相關的說明書這樣，不然重新去看英文的說明書其實頗累的，我英文也不好...那今天就是先來介紹怎麼用 Python 將
AspenPlus 給連接起來吧~&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  目錄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#安裝相關程式與packages"&gt;安裝相關程式與 packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#用Python連接AspenPlus檔案"&gt;用 Python 連接 AspenPlus 檔案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#在AspenPlus中找指定變數的路徑"&gt;在 AspenPlus 中找指定變數的路徑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#完整的code"&gt;完整的 code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#結語"&gt;結語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#參考資料"&gt;參考資料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="安裝相關程式與packages"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  安裝相關程式與 packages&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先就是要先把你的 Python 與 AspenPlus 安裝起來，這我就不說了，網路上應該有很多相關的，就挑一個自己看得懂的來做即可。
&amp;emsp;&amp;emsp;如果上面的都OK了，接下來就是要安裝讓 Python 可以與各種電腦應用程式進行互動的套件——pypiwin32——，使用你的 pip 來安裝：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install pypiwin32&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安裝好了後可以在你的 python 裡面 import 看看有沒有錯誤：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;win32com.client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;win32&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果沒有什麼輸出與錯誤表示安裝成功~&lt;/p&gt;
&lt;h2 id="用Python連接AspenPlus檔案"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  用 Python 連接 AspenPlus 檔案&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先就是先匯入這個模組包，然後使用模組包的&lt;code&gt;Dispatch()&lt;/code&gt;函式，傳入&lt;code&gt;'Apwn.Document'&lt;/code&gt;值告訴 Python 你要開啟
 AspenPlus 程式，如果你的電腦裡面有多種版本的 AspenPlus, 那可以傳&lt;code&gt;'Apwn.Document.{version_code}'&lt;/code&gt;指定你的 AspenPlus 版本，
 code 與 version_code 如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;win32com.client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;win32&lt;/span&gt;

&lt;span class="n"&gt;aspen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;win32&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apwn.Document&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="c1"&gt;# 使用你電腦預設 AspenPlus 版本開啟&lt;/span&gt;
&lt;span class="n"&gt;aspen2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;win32&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apwn.Document.36.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# 使用 AspenPlus V10.0 開啟&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;↓ AspenPlus 版本與版本號的對應&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;版本&lt;/th&gt;
&lt;th align="center"&gt;版本號&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;V8.8&lt;/td&gt;
&lt;td align="center"&gt;34.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;V9&lt;/td&gt;
&lt;td align="center"&gt;35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;V10&lt;/td&gt;
&lt;td align="center"&gt;36.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;V11&lt;/td&gt;
&lt;td align="center"&gt;37.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在這邊你取的變數名稱可以說就是代表你的 AspenPlus 程式了，之後對 AspenPlus 程式的操作都要用這個變數來進行，在這裡我
取名叫做&lt;strong&gt;aspen&lt;/strong&gt;。接下來操控 AspenPlus 的語法都是在 UserGuide 上 &lt;strong&gt;Using the Aspen Plus ActiveX Automation Server&lt;/strong&gt; 
面找得到的了~通常呼叫了 AspenPlus 軟體後就是要開啟指定檔案，UserGuide 上說&lt;code&gt;InitFromArchive2(filename as String,...)&lt;/code&gt;
函式傳入檔案的&lt;strong&gt;絕對路徑&lt;/strong&gt;就可以開啟檔案了（一定要絕對路徑喔！！不然就開不起來）就像下面的 code 這樣：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitFromArchive2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Simulation 1.apw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;# 開啟 C:\Simulation 1.apw 的檔案&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以開始用 Python 操控你的檔案了！！&lt;/p&gt;
&lt;h2 id="在AspenPlus中找指定變數的路徑"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  在 AspenPlus 中找指定變數的路徑&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;檔案開啟是開啟了，但如果你要把一些值抓出來或是用 Python 輸入進去，例如抓取/設定某蒸餾塔的塔板數還是不知道怎麼辦啊，
這時候我們就必須知道那個值在 AspenPlus 程式裡的甚麼地方並且呼叫他，我們可以用 AspenPlus 裡面的 &lt;strong&gt;Variable Explorer&lt;/strong&gt;找尋，
他在 AspenPlus Simulation 介面中的 Costomize 裡面：
&lt;img alt="找出VariableExplorer" src="https://drive.google.com/uc?export=view&amp;amp;id=14r8tbpsfy6xHFiuq2GJ2AQgJikGcOy6z"&gt;&lt;/p&gt;
&lt;p&gt;點開來裡面就是一個階層式的資料索引，所有在 AspenPlus 檔案裡面的資料都在這裡面了！我們可以在裡面找到想要的變數路徑~
&lt;img alt="DataTree" src="https://drive.google.com/uc?export=view&amp;amp;id=1HfBMYRRJGDe-eeAlcc1BjGXC3dqoJhE3"&gt;&lt;/p&gt;
&lt;p&gt;不過其實這樣慢慢找蠻累的，有些看著索引名稱還好找，但有些真的是...，還好還是有方便的功能可以幫你快速找尋路徑！首先到你想要找的
那個變數，這邊就以名為 B1 的蒸餾塔塔頂壓力為例子好了，在壓力那個數字給他複製起來：
&lt;img alt="CopyVariable" src="https://drive.google.com/uc?export=view&amp;amp;id=11CoxHJEQVBsmIw7JmiXyv4Nu6AHJt5tn"&gt;&lt;/p&gt;
&lt;p&gt;再來就到你的 Variable Explorer 那邊，於階層瀏覽空白那邊隨便地方點右鍵並按下&lt;strong&gt;Go to Node&lt;/strong&gt;：
&lt;img alt="click go to node" src="https://drive.google.com/uc?export=view&amp;amp;id=15GHLgZgnf3HTxsPTrjmRUH8Bu9uQMseP"&gt;&lt;/p&gt;
&lt;p&gt;你會發現搜尋輸入框裡面已經有東西在裡面了！但那還不是你的路徑，就先按下&lt;strong&gt;OK&lt;/strong&gt;讓他去找：
&lt;img alt="go_to_node_enter" src="https://drive.google.com/uc?export=view&amp;amp;id=15_7nLws1rR0jFfdgeLrGD0-4ShabrdNp"&gt;&lt;/p&gt;
&lt;p&gt;哇~他除了幫你找到結果還幫你打開了階層清單呢~真是不錯~在右邊表格那邊的資訊欄中就可以得知關於 B1 塔的塔頂壓力這物件的程式相關資訊，
其中的&lt;strong&gt;Path to Node&lt;/strong&gt;與&lt;strong&gt;Call&lt;/strong&gt;這兩個路徑都可以在程式裡面呼叫，再來就是用這個路徑呼叫其他關於這物件的屬性了，這裡要注意，
路徑裡面的開頭&lt;strong&gt;Application&lt;/strong&gt;就是我們前面建立的&lt;strong&gt;aspen&lt;/strong&gt;變數。
&lt;img alt="找到路徑了！" src="https://drive.google.com/uc?export=view&amp;amp;id=1hrD3RA6p_hbch4h0OZe4gCrdlkADQ10U"&gt;&lt;/p&gt;
&lt;p&gt;假設現在你要得到這塔頂壓力的值是多少，從表格來看，&lt;strong&gt;Value&lt;/strong&gt;屬性應該就是你的壓力值，程式就可以這樣寫：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;b1_p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Blocks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRES1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;
&lt;span class="n"&gt;b1_p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\Data\Blocks\B1\Input\PRES1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;    &lt;span class="c1"&gt;# 跟上面那行的作用是一樣的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;前面的路徑只是把 Application 改成我們取名的 aspen 而已，基本上一樣，再來就是&lt;strong&gt;.Value&lt;/strong&gt;來得到我們的值這樣，另外要設定這個值
也是非常簡單，就跟平常妳寫程式用&lt;strong&gt;=&lt;/strong&gt;來做就好：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Blocks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRES1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\Data\Blocks\B1\Input\PRES1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="c1"&gt;# 跟上面那行的作用是一樣的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;現在我把壓力設為 2 bar 了~&lt;/p&gt;
&lt;h2 id="完整的code"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  完整的 code&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;上面的 code 為了要解說感覺有點亂，就在這邊寫一次完整的 code 吧~&lt;br&gt;
目標：用 Python 連接 AspenPlus V8.8 的 Simulation 1.apw 檔案，讀取 B1 塔的塔頂壓力並將其改成 2 bar。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;win32com.client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;win32&lt;/span&gt;     &lt;span class="c1"&gt;# 匯入所需模組包&lt;/span&gt;

&lt;span class="n"&gt;aspen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;win32&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apw.Document.34.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# 開啟 AspenPlus V8.8 程式&lt;/span&gt;
&lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitFromArchive2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Simulation 1.apw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 打開 C:\\Simulation 1.apw 檔案&lt;/span&gt;

&lt;span class="n"&gt;b1_p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Blocks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRES1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;  &lt;span class="c1"&gt;# 取得 B1 塔頂壓力的值&lt;/span&gt;

&lt;span class="n"&gt;aspen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\Data\Blocks\B1\Input\PRES1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="c1"&gt;# 將 B1 塔頂壓力改為 2 bar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="結語"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  結語&lt;/h2&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;以上就是一個非常簡單得如何用 Python 連接 AspenPlus 的方式，裡面其實還有很多功能與坑沒說到，功能的話大部分 UserGuiude 都會介紹到，
可以去參考參考，真的覺得 UserGuide 算是蠻重要的，可以好好的看看，那坑的話像是你要取用的屬性如 Physical Quantity 這種名子裡面有空格
該怎麼辦，這有機會就再介紹了QQ&lt;/p&gt;
&lt;h2 id="參考資料"&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  參考資料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://kitchingroup.cheme.cmu.edu/blog/2013/06/14/Running-Aspen-via-Python/"&gt;Running Aspen via Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aspen Plus User Guide&lt;/li&gt;
&lt;/ol&gt;</content><category term="blogging"></category><category term="AspenPlus"></category><category term="AspenTech"></category><category term="Python"></category></entry><entry><title>Fiddler 無法抓取封包之 port 占用...</title><link href="https://shen-sj.github.io/articles/2020/06/05/fiddler-wu-fa-zhua-qu-feng-bao-zhi-port-zhan-yong/" rel="alternate"></link><published>2020-06-05T22:30:00+00:00</published><updated>2020-06-05T22:30:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-06-05:/articles/2020/06/05/fiddler-wu-fa-zhua-qu-feng-bao-zhi-port-zhan-yong/</id><summary type="html">&lt;p&gt;最近在寫網路爬蟲有用到 Fiddler 抓包軟體幫我看看用自己寫的程式送出與接收到的封包內容與直接用瀏覽器做這些動作有什麼不一樣...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  事發經過&lt;/h2&gt;
&lt;p&gt;最近在寫網路爬蟲有用到 Fiddler 抓包軟體幫我看看用自己寫的程式送出與接收到的封包內容與直接用瀏覽器做這些動作有什麼不一樣，
進而去做一些程式碼的修改，一開始這個 Fiddler 抓包都用得好好的，但突然有一天一樣用 Fiddler 抓取我運行的爬蟲程式封包時候居然出現：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;main.py&amp;quot;, line 426, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;main.py&amp;quot;, line 363, in scrapping&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;main.py&amp;quot;, line 125, in login&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;site-packages\requests\sessions.py&amp;quot;, line 546, in get&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;site-packages\requests\sessions.py&amp;quot;, line 533, in request&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;site-packages\requests\sessions.py&amp;quot;, line 646, in send&lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;site-packages\requests\adapters.py&amp;quot;, line 510, in send&lt;/span&gt;
&lt;span class="err"&gt;requests.exceptions.ProxyError: HTTPSConnectionPool(host=&amp;#39;my.ntu.edu.tw&amp;#39;, port=443): Max retries exceeded with url: /stuLeaveManagement/login.aspx?firstpage=teacher (Caused by ProxyError(&amp;#39;Cannot connect to proxy.&amp;#39;, OSError(&amp;#39;Tunnel connection failed: 405 Method Not Allowed&amp;#39;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;平常不是都用得好好的嗎？怎麼突然就這樣了@@ 而且不只程式出現問題，我連瀏覽器都沒辦法上網了!由上面的情況與爆出的錯誤來看，
感覺起來應該不是程式碼上的問題了(我也記得我沒改甚麼東西...)。雖然上面的錯誤訊息沒有看得很懂，但是我覺得可能是 port 的問題，
Fiddler 會用到 port:8888(如下圖)，
&lt;img alt="Fiddler的port設定" src="https://drive.google.com/uc?export=view&amp;amp;id=1HY4hsEWbwKzNCIMkMMt-QHVDnWIxzs4r"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  調查過程&lt;/h2&gt;
&lt;p&gt;可能是不知道被誰佔用了吧~當然要直接改 Fiddler 的 port 應該是可以的，但還是想要知道是甚麼程式在佔用，萬一是駭客怎麼辦@@
因此就趕快上網查了一下 windows 查詢系統 port 的指令...，原來是&lt;code&gt;netstat -ano&lt;/code&gt;啊~還順便查詢了參數的意義，
由於太多參數了，我就列出這次會用到的三個就好，如果想要知道其他的參數意義，就在自己的 windows 電腦輸入&lt;code&gt;netstat /?&lt;/code&gt;吧~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NETSTAT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;顯示所有連線和接聽連接埠&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;以數字格式顯示位址和連接埠號碼&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;顯示與每個連線相關聯的擁有處理程序識別碼&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;喔...既然知道的指令與參數意義就來查詢看看吧!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;SSJ&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;netstat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ano&lt;/span&gt;

&lt;span class="err"&gt;使用中連線&lt;/span&gt;

  &lt;span class="err"&gt;協定&lt;/span&gt;   &lt;span class="err"&gt;本機位址&lt;/span&gt;               &lt;span class="err"&gt;外部位址&lt;/span&gt;               &lt;span class="err"&gt;狀態&lt;/span&gt;            &lt;span class="n"&gt;PID&lt;/span&gt;
  &lt;span class="n"&gt;TCP&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;              &lt;span class="n"&gt;LISTENING&lt;/span&gt;       &lt;span class="mi"&gt;4280&lt;/span&gt;
  &lt;span class="n"&gt;TCP&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;135&lt;/span&gt;            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;              &lt;span class="n"&gt;LISTENING&lt;/span&gt;       &lt;span class="mi"&gt;764&lt;/span&gt;
  &lt;span class="n"&gt;TCP&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;              &lt;span class="n"&gt;LISTENING&lt;/span&gt;       &lt;span class="mi"&gt;4156&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;痾...好像有點多啊，要我一個一個去找 port:8888 也太累了吧...還好還有一個指令可以幫我們做這件事情，那就是&lt;code&gt;find&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;FIND &amp;lt;你想要搜尋的字串&amp;gt; &amp;lt;檔名:對哪個檔案進行搜尋&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但我們沒有要對甚麼檔案進行搜尋啊，難道還要把&lt;code&gt;netstat -ano&lt;/code&gt;的結果先輸出成檔案在搜尋嗎？哪有這麼白癡的設計，在這情況我們可以利用「|」
(pipe)符號來達成我們的目的，整個指令就變成了&lt;code&gt;netstat -ano | find "8888"&lt;/code&gt;，雖然運作原理不是很懂，但我想他運作機制簡單來說
應該就是將「|」左側&lt;code&gt;netstat -ano&lt;/code&gt;所輸出的結果丟到「|」右側指令的輸入去，畫成簡圖應該是這樣：
&lt;img alt="pipe的簡單解釋圖" src="https://drive.google.com/uc?export=view&amp;amp;id=1ludInCg-c_9Wwva3yOAfrHsOhSzvp2w6"&gt;&lt;/p&gt;
&lt;p&gt;所以這串指令就可以幫我們找到誰在佔用 port:8888 囉~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;C:\Users\SSJ&amp;gt;netstat -ano | find &amp;quot;8888&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;  TCP    127.0.0.1:8888         0.0.0.0:0              LISTENING       27140&lt;/span&gt;
&lt;span class="c"&gt;  TCP    [::1]:8888             [::]:0                 LISTENING       27140&lt;/span&gt;
&lt;span class="c"&gt;  UDP    0.0.0.0:28888          *:*                                    4156&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;喔...看起來有點複查啊，不過好像是看第一行結果（為什麼是看那行，原因有點複雜...反正就先查查看也不錯ˊˇˋ），得知是 PID=27140 
這程式佔用了，那就到工作管理員&amp;gt;&amp;gt;處理程序來看看誰是 PID=27140，如果你的工作管理員&amp;gt;&amp;gt;處理程序沒有顯示 PID 的話，就在任一個欄位名稱點右鍵
，把 PID 打勾就好了：
&lt;img alt="叫出PID" src="https://drive.google.com/uc?export=view&amp;amp;id=1xhGMGhNhVXpfeAEtTWuxJOmZgAPei7mG"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;  找到你了!!&lt;/h2&gt;
&lt;p&gt;&lt;img alt="PID為27140的傢伙" src="https://drive.google.com/uc?export=view&amp;amp;id=1DMdIv2JaibjNW2T9k9eeytwYStjrBXfQ"&gt;
　　喔喔就是你！終於抓到了~看起來是個 python 的執行檔案，目前我好像沒有在跑什麼東西所以關掉應該沒差吧~果然關掉後我的程式重跑就沒問題了，
瀏覽器也可以正常的上網了~~~~&lt;/p&gt;</content><category term="blogging"></category><category term="Fiddler"></category><category term="CMD"></category><category term="Windows"></category></entry><entry><title>用SoftEther架設自己的VPN</title><link href="https://shen-sj.github.io/articles/2020/03/29/yong-softetherjia-she-zi-ji-de-vpn/" rel="alternate"></link><published>2020-03-29T15:30:00+00:00</published><updated>2020-03-29T15:30:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-03-29:/articles/2020/03/29/yong-softetherjia-she-zi-ji-de-vpn/</id><summary type="html">&lt;p&gt;一些可憐的~~菸酒生~~在家也想要查查文獻、看看paper，但學校又沒有提供VPN的話，那可是一件非常痛苦的事情啊...，難道只能去實驗室用電腦了嗎?!&lt;/p&gt;</summary><content type="html">&lt;p&gt;一些可憐的~~菸酒生~~在家也想要查查文獻、看看paper，但學校又沒有提供VPN的話，那可是一件非常痛苦的事情啊...，難道只能去實驗室用電腦了嗎?!
有一個方法就是使用遠端桌面連回實驗室電腦，通常這可以利用一些軟體(如:Teamviewer, Anydesk...)或是你電腦的windows系統是專業版、
教育版、...等等(~~反正不是家用版就對了~~)就能夠辦到，不過我又覺得我只是想要使用學校的這個IP來查詢資料，直接連回電腦會不會太大費周章了@@?
所以我就想使用另外一個方法，在學校電腦自己架一個VPN Server，不過架設的過程是稍嫌複雜，本人也是研究了好幾天才大概能用...
好不容易成功了就記錄一下整個流程吧~不然我怕之後還會用到的話我卻忘了QQ
以下的步驟都是參考以下幾篇文章所得到的心得，我把網址附在最下面，有需要的同學可以去參考參考，基本上步驟都跟他們一樣啦 :))
那就開始吧!!!&lt;/p&gt;
&lt;h2&gt;使用軟體與作業系統&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SoftEtherVPN&lt;/li&gt;
&lt;li&gt;Windows10 企業版 ((家用版應該也是可以吧...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;架設VPN Server&lt;/h2&gt;
&lt;p&gt;首先我是去官方網站下載該軟體，進到官網就是找到 Download&amp;gt;&amp;gt;Download SoftEtherVPN 並進入&lt;br&gt;
&lt;img alt="到官網下載軟體" src="https://drive.google.com/uc?export=view&amp;amp;id=1eTgL6-_xB3h-5hZN1swOy8e67P1H54xr"&gt;&lt;/p&gt;
&lt;p&gt;選擇適合你的選項，像我是windows系統，系統就選windows，然後就會看到下面出現很多連結，最上面的應該是最新版本，應該也是可以用啦，
不過我是選擇稍微就一點的版本就是，~~總是有傳言最新的比較不穩定~~，我是用Ver4.31給大家參考參考&lt;br&gt;
&lt;img alt="選擇軟體" src="https://drive.google.com/uc?export=view&amp;amp;id=1NXG6ihAma2wSLFlIZJlwH12ZDCppEYUk"&gt;&lt;/p&gt;
&lt;p&gt;選了想要的版本後他應該就會開始下載了，等下載完就點兩下開始安裝，就下一步~&lt;br&gt;
&lt;img alt="開始安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=167LByeywEKjDZrHQ7i6uU6rU7cP58DVf"&gt;&lt;/p&gt;
&lt;p&gt;因為我們就是要建立一個VPN Server，所以選SoftEther VPN Server後就下一步~&lt;br&gt;
&lt;img alt="選SoftEther VPN Server" src="https://drive.google.com/uc?export=view&amp;amp;id=1DEWHyPRsFv5yfoY_M1JXSAZa1klDu6LQ"&gt;&lt;/p&gt;
&lt;p&gt;後面就是一些許可與軟體訊息什麼的，看過後沒問題就可以下一步了~&lt;br&gt;
&lt;img alt="用戶許可協議" src="https://drive.google.com/uc?export=view&amp;amp;id=1vmSzhNeYSre1_K_rw7SAOQKt_O6Bi3A6"&gt;
&lt;img alt="重要訊息" src="https://drive.google.com/uc?export=view&amp;amp;id=1Q6Eg_uHkPheDzQLsQY2tR4yh3crQepvN"&gt;&lt;/p&gt;
&lt;p&gt;指定好你軟體要安裝在那裡就繼續((我是使用預設而已&lt;br&gt;
&lt;img alt="指定安裝目錄" src="https://drive.google.com/uc?export=view&amp;amp;id=1PUneC8sQ0EGJvbR20QSFWzUlW3Wx5gji"&gt;&lt;/p&gt;
&lt;p&gt;開始安裝!!&lt;br&gt;
&lt;img alt="進行安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=16azoj2LZMon5ZaTFzn34cZ_uGqdc9BOT"&gt;&lt;/p&gt;
&lt;p&gt;咕嚕咕嚕咕嚕......&lt;br&gt;
&lt;img alt="正在安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1Rhrs8yfG85t82FhuA1jr3tHTgEOKAeJO"&gt;&lt;/p&gt;
&lt;p&gt;耶~~~ 安裝好了~~~&lt;br&gt;
&lt;img alt="安裝好了" src="https://drive.google.com/uc?export=view&amp;amp;id=1CQwC0npVoZpx3U7iyZg5QGF-Gp_LrQao"&gt;&lt;/p&gt;
&lt;p&gt;安裝好了如果直接按完成，他應該會幫你開啟 SoftEther VPN Server 管理工具，這時你可以看到他已經預先幫你建立了一個連線設置，
我們就直接點那個設置兩下進行一些設定吧~&lt;br&gt;
&lt;img alt="本地主機設置" src="https://drive.google.com/uc?export=view&amp;amp;id=1j-U6aETP2CiBAr8G017sB0SmVX0u8AQF"&gt;&lt;/p&gt;
&lt;p&gt;因為我們是第一次進去這設置，所以他會叫你建立管理者密碼，之後如果身為管理者的你要進去這設置管理一些設定的話會需要用到這密碼~&lt;br&gt;
&lt;img alt="設定管理者密碼" src="https://drive.google.com/uc?export=view&amp;amp;id=1kHyXodJTdRGnIt-aOstLXG25xVIknbeL"&gt;&lt;/p&gt;
&lt;p&gt;密碼設定好了之後應該會跳出這東西，好像可以幫你簡單的安裝一些設定啦，但我是直接關閉等等自己設定這樣&lt;br&gt;
&lt;img alt="server簡單安裝" src="https://drive.google.com/uc?export=view&amp;amp;id=1qz5J9yBqSUY5vAjHmKWwZ8jUw4NRPC8f"&gt;&lt;/p&gt;
&lt;p&gt;關閉後他就會問你要不要設置IPsec，那我們就確定，因為等等連線會用到這東西~&lt;br&gt;
&lt;img alt="是否設定IPsec" src="https://drive.google.com/uc?export=view&amp;amp;id=14N0lXy7MV0Y8H32_4cDFesLWRV6uVcdL"&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id="IPsecPS"&gt;關於這東西的設置我是勾選第一個框框"啟動L2TP服務器功能(L2TP over IPsec)"，再來最下面那個密碼必須要設定並好好保存，
之後要連到你這VPN會需要的~&lt;br&gt;
&lt;img alt="IPsec設定" src="https://drive.google.com/uc?export=view&amp;amp;id=1pPml1GTZ5A36b-6A2WZQ7m8qpKKNFcAq"&gt;&lt;/p&gt;
&lt;p&gt;到了這畫面表示快好了!!我們還有一個設定需要設定才能連上，首先先點"管理虛擬HUB"
&lt;img alt="管理HUB" src="https://drive.google.com/uc?export=view&amp;amp;id=1lS9dpiIHOOfD0tR5VlTp0GbVLrvVflKI"&gt;&lt;/p&gt;
&lt;p&gt;再來進入"虛擬NAT和虛擬DHCP服務器"裡面
&lt;img alt="進入&amp;quot;虛擬NAT和虛擬DHCP服務器&amp;quot;" src="https://drive.google.com/uc?export=view&amp;amp;id=1ULYX5e9PSJZHMEp-FOGYEo6x4P2hvuuk"&gt;&lt;/p&gt;
&lt;p&gt;點選"啟用SecureNAT"就可以囉~"SecureNAT配置"我是使用預設的，如果有懂得朋友也可以進去裡面客製一下~好了就可以關閉本畫面回到管理HUB畫面了
&lt;img alt="啟用SecureNAT" src="https://drive.google.com/uc?export=view&amp;amp;id=1HTIz9ffHnu7np1n-E5ipRatx4OfdhtLA"&gt;&lt;/p&gt;
&lt;p&gt;別人要使用你這台VPN需要透過帳號跟密碼，身為管理者的你就需要替他們建立帳號跟密碼囉，這樣除了比較安全外也可以限制有誰可以使用你的VPN，
因此我們點選"管理用戶"來新增用戶
&lt;img alt="管理用戶" src="https://drive.google.com/uc?export=view&amp;amp;id=1r4s8pfYxxYoVoJEXnhyQZEQrCZnbffUf"&gt;&lt;/p&gt;
&lt;p&gt;你可以看到這裡什麼用戶都沒有，所以還沒有人可以使用你的VPN，我們點選"新建"
&lt;img alt="管理用戶" src="https://drive.google.com/uc?export=view&amp;amp;id=1Z1AAoERrf3yBBnyitAbL5rSa3YblpnSH"&gt;&lt;/p&gt;
&lt;p&gt;在這邊你就可以輸入新用戶的帳號跟密碼，至少我圖中兩個紅色框框部分需要設定，其他部分例如限制使用時段、
驗證類型等等如果你會且有需要的話也可以去做設定~
&lt;img alt="建立用戶" src="https://drive.google.com/uc?export=view&amp;amp;id=1vs_VaMlG52Sky-uzU_G-z4PQHeAb40Wq"&gt;&lt;/p&gt;
&lt;p&gt;終於可以使用了!!可以請人家用用看囉~~
&lt;img alt="建立完成" src="https://drive.google.com/uc?export=view&amp;amp;id=1BSp_1-0VSdfSxW409ck7HJNgUFDX2FCp"&gt;&lt;/p&gt;
&lt;h2&gt;在windows中使用VPN&lt;/h2&gt;
&lt;p&gt;首先必須到你windows電腦裡的 設定&amp;gt;&amp;gt;網路和網際網路&amp;gt;&amp;gt;VPN，來新建一個VPN連線
&lt;img alt="建立VPN" src="https://drive.google.com/uc?export=view&amp;amp;id=1yUNKpnD3YIA28te70TtZ6GP1tZmDNHRq"&gt;&lt;/p&gt;
&lt;p&gt;然後就輸入所需要的資訊，像是:
* 連線名稱: 自己知道這VPN是甚麼就好，跟你的server沒關係~
* 伺服器名稱或位址: 就是你架的VPN Server的IP
* VPN類型: L2TP/IPsec(使用預先共用金鑰)
* 預先共用金鑰: 就是你在&lt;a href="#IPsecPS"&gt;這步驟&lt;/a&gt;所設的密碼
* 使用者名稱: 管理者幫你建立的帳號
* 密碼: 管理者幫你設定的密碼&lt;br&gt;
&lt;img alt="輸入VPN資訊" src="https://drive.google.com/uc?export=view&amp;amp;id=10B12HEKyKHRvsOedJ09UCpBkuJwdaPvW"&gt;&lt;/p&gt;
&lt;p&gt;都輸入完就可以儲存囉~~再來你點選你工具列右下角的網路圖示，可以發現到多了你剛剛新增個VPN，當你想要使用這VPN查paper的時候就按連線&lt;br&gt;
&lt;img alt="建立VPN連線" src="https://drive.google.com/uc?export=view&amp;amp;id=1V8V7ckrFyLtnplXLJafVBpGoCSUvgTRY"&gt;&lt;/p&gt;
&lt;p&gt;出現已連線就是成功了，恭喜你!!!&lt;br&gt;
&lt;img alt="VPN連線成功!" src="https://drive.google.com/uc?export=view&amp;amp;id=1vvrpHAjJM02kIxwNklYrEDoBFknnWidY"&gt;&lt;/p&gt;
&lt;p&gt;參考資料:&lt;br&gt;
&lt;a href="https://zh.wikipedia.org/wiki/SoftEther_VPN"&gt;https://zh.wikipedia.org/wiki/SoftEther_VPN&lt;/a&gt;
&lt;a href="https://noter.tw/4524/softether-vpn-%E6%9E%B6%E8%A8%AD%E8%A8%98%E9%8C%84/"&gt;https://noter.tw/4524/softether-vpn-%E6%9E%B6%E8%A8%AD%E8%A8%98%E9%8C%84/&lt;/a&gt;
&lt;a href="https://jjnux.blogspot.com/2017/02/softether-vpn-server-windows.html"&gt;https://jjnux.blogspot.com/2017/02/softether-vpn-server-windows.html&lt;/a&gt;
&lt;a href="https://it001.pixnet.net/blog/post/328610332-it%E5%B0%88%E9%A1%8C--%E5%AE%89%E8%A3%9Dsoftethervpn-%28l2tp-ipsec%29"&gt;https://it001.pixnet.net/blog/post/328610332-it%E5%B0%88%E9%A1%8C--%E5%AE%89%E8%A3%9Dsoftethervpn-%28l2tp-ipsec%29&lt;/a&gt;&lt;/p&gt;</content><category term="blogging"></category><category term="VPN"></category><category term="SoftEther VPN"></category></entry><entry><title>用Pelican搞部落格遇到的python import模組問題...</title><link href="https://shen-sj.github.io/articles/2020/03/28/yong-pelicangao-bu-luo-ge-yu-dao-de-python-importmo-zu-wen-ti/" rel="alternate"></link><published>2020-03-28T23:00:00+00:00</published><updated>2020-03-28T23:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-03-28:/articles/2020/03/28/yong-pelicangao-bu-luo-ge-yu-dao-de-python-importmo-zu-wen-ti/</id><summary type="html">&lt;p&gt;最近一直在練習用Pelican寫部落格，不過之前我設定專案的時候好像沒設定好，publishconf.py裡面沒有把pelicanconfi.py裡的設定給匯入...&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近一直在練習用Pelican寫部落格，不過之前我設定專案的時候好像沒設定好，publishconf.py裡面沒有把pelicanconfi.py裡的設定給匯入，
所以我就自己把&lt;code&gt;from pelicanconf import *&lt;/code&gt;給加了進去，但每次當我要把目前的東西輸出成檔案在CMD下
&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;指令的時候`,就會出現這個錯誤...  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CRITICAL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelicanconf&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;疑?奇怪，pelicanconf.py 跟 publishconf.py 是在同一個資料夾，而且我不是有import了嗎?!怎麼他會找不到呢...
因此我就確認了一下publishconf.py在工作的時候的路徑是長怎樣，我就在我那檔案添加了這段程式碼:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後就用CMD再給他run一次，結果...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;SSJ&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Anaconda3&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;envs&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;myblog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Scripts&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;pelican.exe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;ssj&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;anaconda3&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;envs&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;myblog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;python37.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;......&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;怎麼沒有看到我的工作目錄哩...看來只好給他加上去了，但我發現其實Pelican有考慮到這點已經幫你加好了XDDD，只是我import的語句應該在目錄加
進去之後，這樣才不會有問題，因此程式碼就變成了:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後終於成功了@@ 可以繼續專心研究搞部落格了...&lt;/p&gt;</content><category term="blogging"></category><category term="Python"></category><category term="Pelican"></category></entry><entry><title>圖片測試_外部連結</title><link href="https://shen-sj.github.io/articles/2020/03/02/tu-pian-ce-shi-_wai-bu-lian-jie/" rel="alternate"></link><published>2020-03-02T12:00:00+00:00</published><updated>2020-03-02T12:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-03-02:/articles/2020/03/02/tu-pian-ce-shi-_wai-bu-lian-jie/</id><summary type="html">&lt;p&gt;這是一篇測試能不能顯示外部連結圖片的文章~&lt;/p&gt;</summary><content type="html">&lt;p&gt;這是一篇測試能不能顯示外部連結圖片的文章~
&lt;img alt="bird logo" src="https://drive.google.com/uc?export=view&amp;amp;id=1vCd1eCSRQDtOCWGQBesdTtna-LVPaWsW"&gt;&lt;/p&gt;</content><category term="test"></category><category term="picture"></category></entry><entry><title>show the picture</title><link href="https://shen-sj.github.io/articles/2020/03/01/show-the-picture/" rel="alternate"></link><published>2020-03-01T12:00:00+00:00</published><updated>2020-03-01T12:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-03-01:/articles/2020/03/01/show-the-picture/</id><content type="html">&lt;p&gt;&lt;img alt="bird logo" src="https://shen-sj.github.io/img/bird.jpg"&gt;&lt;/p&gt;</content><category term="test"></category><category term="picture"></category></entry><entry><title>Test for icon and underline title</title><link href="https://shen-sj.github.io/articles/2020/03/01/test-for-icon-and-underline-title/" rel="alternate"></link><published>2020-03-01T12:00:00+00:00</published><updated>2020-03-01T12:00:00+00:00</updated><author><name>SSJ</name></author><id>tag:shen-sj.github.io,2020-03-01:/articles/2020/03/01/test-for-icon-and-underline-title/</id><summary type="html">&lt;p&gt;[the brief of article show in the index.html]&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;i class="fas fa-crow"&gt;&lt;/i&gt;測試我的標題&lt;/h2&gt;
&lt;hr&gt;</content><category term="Test"></category><category term="icon"></category></entry><entry><title>Markdown Examples Part 1</title><link href="https://shen-sj.github.io/articles/2019/01/02/markdown-examples-part-1/" rel="alternate"></link><published>2019-01-02T12:00:00+00:00</published><updated>2019-01-02T12:00:00+00:00</updated><author><name>Matthew Devaney</name></author><id>tag:shen-sj.github.io,2019-01-02:/articles/2019/01/02/markdown-examples-part-1/</id><summary type="html">&lt;p&gt;Basic markdown examples are shown below&lt;/p&gt;</summary><content type="html">&lt;p&gt;Basic markdown examples are shown below&lt;/p&gt;
&lt;p&gt;This text is &lt;strong&gt;bold&lt;/strong&gt;
This text is also &lt;strong&gt;bold&lt;/strong&gt;
⋯
This text is &lt;em&gt;italic&lt;/em&gt;
This text is also &lt;em&gt;italic&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This text is &lt;strong&gt;&lt;em&gt;italic and bold&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;An h1 heading&lt;/h1&gt;
&lt;h2&gt;An h2 heading&lt;/h2&gt;
&lt;h3&gt;An h3 heading...&lt;/h3&gt;
&lt;h6&gt;An h6 heading&lt;/h6&gt;
&lt;p&gt;A list with numbers:
1. One
2. Two
3. Three&lt;/p&gt;
&lt;p&gt;A list with bullets:
* Bullet
* Bullet
* Bullet&lt;/p&gt;
&lt;p&gt;Here's a blockquote:&lt;/p&gt;
&lt;p&gt;&amp;gt; Simple is better than complex&lt;/p&gt;
&lt;p&gt;Here's a table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column1&lt;/th&gt;
&lt;th&gt;Column 2&lt;/th&gt;
&lt;th&gt;Column 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Value 1&lt;/td&gt;
&lt;td&gt;Value 2&lt;/td&gt;
&lt;td&gt;Value 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value 4&lt;/td&gt;
&lt;td&gt;Value 5&lt;/td&gt;
&lt;td&gt;Value 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value 7&lt;/td&gt;
&lt;td&gt;Value 8&lt;/td&gt;
&lt;td&gt;Value 9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here's a python script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 先開啟起始網頁取得初始cookies取得權限&lt;/span&gt;
    &lt;span class="n"&gt;pre_web&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pre_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nor_headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pre_cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dict_from_cookiejar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 登入學校系統&lt;/span&gt;
    &lt;span class="n"&gt;login_web&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nor_headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;login_cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dict_from_cookiejar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;remove_cookie_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PHPSESSID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 不知道 cookie 多了不必要的PHPSESSID會不會怎樣，先刪除好了&lt;/span&gt;

    &lt;span class="c1"&gt;# 檢查登入有沒有失敗&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;login_web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;LoginError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;登入失敗!!!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;login_web&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="test"></category><category term="markdown"></category></entry></feed>